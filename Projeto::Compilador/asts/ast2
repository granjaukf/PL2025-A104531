
Optimizing AST...

Optimized AST:
Program(
  block=Block(
    extra_var_decl=None,
    proc_func_part=[
    ],
    statement_part=StatementPart(
      statement_sequence=StatementSequence(
        statements=[
          Assignment(
            target=Identifier(
              name=soma
            ),
            value=Literal(
              type_name=NUMBER,
              value=0
            )
          ),
          WritelnStatement(
            params=[
              Literal(
                type_name=PHRASE,
                value='Introduza 5 números inteiros:'
              ),
            ]
          ),
          ForStatement(
            body=StatementPart(
              statement_sequence=StatementSequence(
                statements=[
                  ReadlnStatement(
                    params=[
                      ArrayId(
                        expression=Identifier(
                          name=i
                        ),
                        id_name=numeros
                      ),
                    ]
                  ),
                  Assignment(
                    target=Identifier(
                      name=soma
                    ),
                    value=BinaryOp(
                      left=Identifier(
                        name=soma
                      ),
                      operator=+,
                      right=ArrayId(
                        expression=Identifier(
                          name=i
                        ),
                        id_name=numeros
                      )
                    )
                  ),
                ]
              )
            ),
            direction=to,
            init=Assignment(
              target=Identifier(
                name=i
              ),
              value=Literal(
                type_name=NUMBER,
                value=1
              )
            ),
            limit=Literal(
              type_name=NUMBER,
              value=5
            )
          ),
          WritelnStatement(
            params=[
              Literal(
                type_name=PHRASE,
                value='A soma dos números é: '
              ),
              Identifier(
                name=soma
              ),
            ]
          ),
        ]
      )
    ),
    var_decl_part=VarDeclarationPart(
      declarations=[
        VarDeclaration(
          id_list=[
            Identifier(
              name=numeros
            ),
          ],
          type_name=ArrayType(
            element_type=Type(
              type_name=integer
            ),
            range=None
          )
        ),
        VarDeclaration(
          id_list=[
            Identifier(
              name=i
            ),
            Identifier(
              name=soma
            ),
          ],
          type_name=Type(
            type_name=integer
          )
        ),
      ]
    )
  ),
  header=Header(
    program_name=SomaArray
  )
)

