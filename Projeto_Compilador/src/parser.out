Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> header SEMICOLON block DOT
Rule 2     header -> PROGRAM ID
Rule 3     block -> variable_declaration_part procedure_or_function statement_part
Rule 4     block -> variable_declaration_part procedure_or_function variable_declaration_part statement_part
Rule 5     variable_declaration_part -> VAR variable_declaration_list
Rule 6     variable_declaration_part -> <empty>
Rule 7     variable_declaration_list -> variable_declaration_list variable_declaration
Rule 8     variable_declaration_list -> variable_declaration
Rule 9     variable_declaration -> id_list COLON type SEMICOLON
Rule 10    id_list -> ID
Rule 11    id_list -> ID LBRACKET expression RBRACKET
Rule 12    id_list -> ID COMMA id_list
Rule 13    id_list -> ID LBRACKET expression RBRACKET COMMA id_list
Rule 14    procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function
Rule 15    procedure_or_function -> <empty>
Rule 16    proc_or_func_declaration -> procedure_declaration
Rule 17    proc_or_func_declaration -> function_declaration
Rule 18    procedure_declaration -> procedure_heading SEMICOLON block
Rule 19    procedure_heading -> PROCEDURE ID
Rule 20    procedure_heading -> PROCEDURE ID LPAREN parameter_list RPAREN
Rule 21    function_declaration -> function_heading SEMICOLON block
Rule 22    function_heading -> FUNCTION type
Rule 23    function_heading -> FUNCTION ID COLON type
Rule 24    function_heading -> FUNCTION ID LPAREN parameter_list RPAREN COLON type
Rule 25    parameter_list -> parameter COMMA parameter_list
Rule 26    parameter_list -> parameter
Rule 27    parameter -> ID COLON type
Rule 28    type -> REAL
Rule 29    type -> INTEGER
Rule 30    type -> BOOLEAN
Rule 31    type -> STRING
Rule 32    type -> array_type
Rule 33    array_type -> ARRAY LBRACKET range RBRACKET OF type
Rule 34    range -> expression RANGE expression
Rule 35    statement_part -> BEGIN statement_sequence END
Rule 36    statement_sequence -> statement SEMICOLON statement_sequence
Rule 37    statement_sequence -> statement
Rule 38    statement -> assignment_statement
Rule 39    statement -> statement_part
Rule 40    statement -> if_statement
Rule 41    statement -> while_statement
Rule 42    statement -> repeat_statement
Rule 43    statement -> for_statement
Rule 44    statement -> procedure_or_function_call
Rule 45    statement -> writeln_statement
Rule 46    statement -> readln_statement
Rule 47    statement -> break_statement
Rule 48    statement -> continue_statement
Rule 49    statement -> case_statement
Rule 50    statement -> <empty>
Rule 51    case_statement -> CASE expression OF case_list END
Rule 52    case_list -> case_option SEMICOLON case_list
Rule 53    case_list -> case_option SEMICOLON
Rule 54    case_option -> NUMBER COLON statement
Rule 55    case_option -> BOOL COLON statement
Rule 56    case_option -> PHRASE COLON statement
Rule 57    case_option -> ID COLON statement
Rule 58    writeln_statement -> WRITELN LPAREN param_list RPAREN
Rule 59    writeln_statement -> WRITELN LPAREN RPAREN
Rule 60    writeln_statement -> WRITE LPAREN param_list RPAREN
Rule 61    writeln_statement -> WRITE LPAREN RPAREN
Rule 62    readln_statement -> READLN LPAREN id_list RPAREN
Rule 63    readln_statement -> READLN LPAREN RPAREN
Rule 64    readln_statement -> READ LPAREN id_list RPAREN
Rule 65    readln_statement -> READ LPAREN RPAREN
Rule 66    break_statement -> BREAK
Rule 67    continue_statement -> CONTINUE
Rule 68    procedure_or_function_call -> ID LPAREN param_list RPAREN
Rule 69    procedure_or_function_call -> ID LPAREN RPAREN
Rule 70    procedure_or_function_call -> ID
Rule 71    param_list -> param_list COMMA param
Rule 72    param_list -> param
Rule 73    param -> expression
Rule 74    if_statement -> IF expression THEN statement ELSE statement
Rule 75    if_statement -> IF expression THEN statement
Rule 76    while_statement -> WHILE expression DO statement
Rule 77    repeat_statement -> REPEAT statement UNTIL expression
Rule 78    for_statement -> FOR assignment_statement TO expression DO statement
Rule 79    for_statement -> FOR assignment_statement DOWNTO expression DO statement
Rule 80    assignment_statement -> ID ASSIGN expression
Rule 81    assignment_statement -> ID ASSIGN procedure_or_function_call
Rule 82    assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression
Rule 83    expression -> expression and_or expression_m
Rule 84    expression -> expression_m
Rule 85    expression_m -> expression_s
Rule 86    expression_m -> expression_m sign expression_s
Rule 87    expression_s -> element
Rule 88    expression_s -> expression_s psign element
Rule 89    and_or -> AND
Rule 90    and_or -> OR
Rule 91    psign -> TIMES
Rule 92    psign -> DIVIDE
Rule 93    sign -> PLUS
Rule 94    sign -> MINUS
Rule 95    sign -> DIV
Rule 96    sign -> MOD
Rule 97    sign -> EQUALS
Rule 98    sign -> DIFFERENT
Rule 99    sign -> LESSTHAN
Rule 100   sign -> LESSEQUAL
Rule 101   sign -> GREATERTHAN
Rule 102   sign -> GREATEREQUAL
Rule 103   length_function -> LENGTH LPAREN expression RPAREN
Rule 104   element -> ID
Rule 105   element -> NUMBER
Rule 106   element -> BOOL
Rule 107   element -> PHRASE
Rule 108   element -> LPAREN expression RPAREN
Rule 109   element -> NOT element
Rule 110   element -> length_function
Rule 111   element -> ID LBRACKET expression RBRACKET
Rule 112   element -> procedure_or_function_call

Terminals, with rules where they appear

AND                  : 89
ARRAY                : 33
ASSIGN               : 80 81 82
BEGIN                : 35
BOOL                 : 55 106
BOOLEAN              : 30
BREAK                : 66
CASE                 : 51
COLON                : 9 23 24 27 54 55 56 57
COMMA                : 12 13 25 71
CONTINUE             : 67
DIFFERENT            : 98
DIV                  : 95
DIVIDE               : 92
DO                   : 76 78 79
DOT                  : 1
DOWNTO               : 79
ELSE                 : 74
END                  : 35 51
EQUALS               : 97
FOR                  : 78 79
FUNCTION             : 22 23 24
GREATEREQUAL         : 102
GREATERTHAN          : 101
ID                   : 2 10 11 12 13 19 20 23 24 27 57 68 69 70 80 81 82 104 111
IF                   : 74 75
INTEGER              : 29
LBRACKET             : 11 13 33 82 111
LENGTH               : 103
LESSEQUAL            : 100
LESSTHAN             : 99
LPAREN               : 20 24 58 59 60 61 62 63 64 65 68 69 103 108
MINUS                : 94
MOD                  : 96
NOT                  : 109
NUMBER               : 54 105
OF                   : 33 51
OR                   : 90
PHRASE               : 56 107
PLUS                 : 93
PROCEDURE            : 19 20
PROGRAM              : 2
RANGE                : 34
RBRACKET             : 11 13 33 82 111
READ                 : 64 65
READLN               : 62 63
REAL                 : 28
REPEAT               : 77
RPAREN               : 20 24 58 59 60 61 62 63 64 65 68 69 103 108
SEMICOLON            : 1 9 14 18 21 36 52 53
STRING               : 31
THEN                 : 74 75
TIMES                : 91
TO                   : 78
UNTIL                : 77
VAR                  : 5
WHILE                : 76
WRITE                : 60 61
WRITELN              : 58 59
error                : 

Nonterminals, with rules where they appear

and_or               : 83
array_type           : 32
assignment_statement : 38 78 79
block                : 1 18 21
break_statement      : 47
case_list            : 51 52
case_option          : 52 53
case_statement       : 49
continue_statement   : 48
element              : 87 88 109
expression           : 11 13 34 34 51 73 74 75 76 77 78 79 80 82 82 83 103 108 111
expression_m         : 83 84 86
expression_s         : 85 86 88
for_statement        : 43
function_declaration : 17
function_heading     : 21
header               : 1
id_list              : 9 12 13 62 64
if_statement         : 40
length_function      : 110
param                : 71 72
param_list           : 58 60 68 71
parameter            : 25 26
parameter_list       : 20 24 25
proc_or_func_declaration : 14
procedure_declaration : 16
procedure_heading    : 18
procedure_or_function : 3 4 14
procedure_or_function_call : 44 81 112
program              : 0
psign                : 88
range                : 33
readln_statement     : 46
repeat_statement     : 42
sign                 : 86
statement            : 36 37 54 55 56 57 74 74 75 76 77 78 79
statement_part       : 3 4 39
statement_sequence   : 35 36
type                 : 9 22 23 24 27 33
variable_declaration : 7 8
variable_declaration_list : 5 7
variable_declaration_part : 3 4 4
while_statement      : 41
writeln_statement    : 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . header SEMICOLON block DOT
    (2) header -> . PROGRAM ID

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    header                         shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> header . SEMICOLON block DOT

    SEMICOLON       shift and go to state 4


state 3

    (2) header -> PROGRAM . ID

    ID              shift and go to state 5


state 4

    (1) program -> header SEMICOLON . block DOT
    (3) block -> . variable_declaration_part procedure_or_function statement_part
    (4) block -> . variable_declaration_part procedure_or_function variable_declaration_part statement_part
    (5) variable_declaration_part -> . VAR variable_declaration_list
    (6) variable_declaration_part -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    PROCEDURE       reduce using rule 6 (variable_declaration_part -> .)
    FUNCTION        reduce using rule 6 (variable_declaration_part -> .)
    BEGIN           reduce using rule 6 (variable_declaration_part -> .)

  ! VAR             [ reduce using rule 6 (variable_declaration_part -> .) ]

    block                          shift and go to state 6
    variable_declaration_part      shift and go to state 7

state 5

    (2) header -> PROGRAM ID .

    SEMICOLON       reduce using rule 2 (header -> PROGRAM ID .)


state 6

    (1) program -> header SEMICOLON block . DOT

    DOT             shift and go to state 9


state 7

    (3) block -> variable_declaration_part . procedure_or_function statement_part
    (4) block -> variable_declaration_part . procedure_or_function variable_declaration_part statement_part
    (14) procedure_or_function -> . proc_or_func_declaration SEMICOLON procedure_or_function
    (15) procedure_or_function -> .
    (16) proc_or_func_declaration -> . procedure_declaration
    (17) proc_or_func_declaration -> . function_declaration
    (18) procedure_declaration -> . procedure_heading SEMICOLON block
    (21) function_declaration -> . function_heading SEMICOLON block
    (19) procedure_heading -> . PROCEDURE ID
    (20) procedure_heading -> . PROCEDURE ID LPAREN parameter_list RPAREN
    (22) function_heading -> . FUNCTION type
    (23) function_heading -> . FUNCTION ID COLON type
    (24) function_heading -> . FUNCTION ID LPAREN parameter_list RPAREN COLON type

    BEGIN           reduce using rule 15 (procedure_or_function -> .)
    VAR             reduce using rule 15 (procedure_or_function -> .)
    PROCEDURE       shift and go to state 16
    FUNCTION        shift and go to state 17

    procedure_or_function          shift and go to state 10
    proc_or_func_declaration       shift and go to state 11
    procedure_declaration          shift and go to state 12
    function_declaration           shift and go to state 13
    procedure_heading              shift and go to state 14
    function_heading               shift and go to state 15

state 8

    (5) variable_declaration_part -> VAR . variable_declaration_list
    (7) variable_declaration_list -> . variable_declaration_list variable_declaration
    (8) variable_declaration_list -> . variable_declaration
    (9) variable_declaration -> . id_list COLON type SEMICOLON
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    ID              shift and go to state 21

    variable_declaration_list      shift and go to state 18
    variable_declaration           shift and go to state 19
    id_list                        shift and go to state 20

state 9

    (1) program -> header SEMICOLON block DOT .

    $end            reduce using rule 1 (program -> header SEMICOLON block DOT .)


state 10

    (3) block -> variable_declaration_part procedure_or_function . statement_part
    (4) block -> variable_declaration_part procedure_or_function . variable_declaration_part statement_part
    (35) statement_part -> . BEGIN statement_sequence END
    (5) variable_declaration_part -> . VAR variable_declaration_list
    (6) variable_declaration_part -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 24
    VAR             shift and go to state 8

  ! BEGIN           [ reduce using rule 6 (variable_declaration_part -> .) ]

    variable_declaration_part      shift and go to state 22
    statement_part                 shift and go to state 23

state 11

    (14) procedure_or_function -> proc_or_func_declaration . SEMICOLON procedure_or_function

    SEMICOLON       shift and go to state 25


state 12

    (16) proc_or_func_declaration -> procedure_declaration .

    SEMICOLON       reduce using rule 16 (proc_or_func_declaration -> procedure_declaration .)


state 13

    (17) proc_or_func_declaration -> function_declaration .

    SEMICOLON       reduce using rule 17 (proc_or_func_declaration -> function_declaration .)


state 14

    (18) procedure_declaration -> procedure_heading . SEMICOLON block

    SEMICOLON       shift and go to state 26


state 15

    (21) function_declaration -> function_heading . SEMICOLON block

    SEMICOLON       shift and go to state 27


state 16

    (19) procedure_heading -> PROCEDURE . ID
    (20) procedure_heading -> PROCEDURE . ID LPAREN parameter_list RPAREN

    ID              shift and go to state 28


state 17

    (22) function_heading -> FUNCTION . type
    (23) function_heading -> FUNCTION . ID COLON type
    (24) function_heading -> FUNCTION . ID LPAREN parameter_list RPAREN COLON type
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    ID              shift and go to state 30
    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 29
    array_type                     shift and go to state 35

state 18

    (5) variable_declaration_part -> VAR variable_declaration_list .
    (7) variable_declaration_list -> variable_declaration_list . variable_declaration
    (9) variable_declaration -> . id_list COLON type SEMICOLON
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    PROCEDURE       reduce using rule 5 (variable_declaration_part -> VAR variable_declaration_list .)
    FUNCTION        reduce using rule 5 (variable_declaration_part -> VAR variable_declaration_list .)
    BEGIN           reduce using rule 5 (variable_declaration_part -> VAR variable_declaration_list .)
    VAR             reduce using rule 5 (variable_declaration_part -> VAR variable_declaration_list .)
    ID              shift and go to state 21

    variable_declaration           shift and go to state 37
    id_list                        shift and go to state 20

state 19

    (8) variable_declaration_list -> variable_declaration .

    ID              reduce using rule 8 (variable_declaration_list -> variable_declaration .)
    PROCEDURE       reduce using rule 8 (variable_declaration_list -> variable_declaration .)
    FUNCTION        reduce using rule 8 (variable_declaration_list -> variable_declaration .)
    BEGIN           reduce using rule 8 (variable_declaration_list -> variable_declaration .)
    VAR             reduce using rule 8 (variable_declaration_list -> variable_declaration .)


state 20

    (9) variable_declaration -> id_list . COLON type SEMICOLON

    COLON           shift and go to state 38


state 21

    (10) id_list -> ID .
    (11) id_list -> ID . LBRACKET expression RBRACKET
    (12) id_list -> ID . COMMA id_list
    (13) id_list -> ID . LBRACKET expression RBRACKET COMMA id_list

    COLON           reduce using rule 10 (id_list -> ID .)
    RPAREN          reduce using rule 10 (id_list -> ID .)
    LBRACKET        shift and go to state 39
    COMMA           shift and go to state 40


state 22

    (4) block -> variable_declaration_part procedure_or_function variable_declaration_part . statement_part
    (35) statement_part -> . BEGIN statement_sequence END

    BEGIN           shift and go to state 24

    statement_part                 shift and go to state 41

state 23

    (3) block -> variable_declaration_part procedure_or_function statement_part .

    DOT             reduce using rule 3 (block -> variable_declaration_part procedure_or_function statement_part .)
    SEMICOLON       reduce using rule 3 (block -> variable_declaration_part procedure_or_function statement_part .)


state 24

    (35) statement_part -> BEGIN . statement_sequence END
    (36) statement_sequence -> . statement SEMICOLON statement_sequence
    (37) statement_sequence -> . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement_sequence             shift and go to state 42
    statement                      shift and go to state 43
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 25

    (14) procedure_or_function -> proc_or_func_declaration SEMICOLON . procedure_or_function
    (14) procedure_or_function -> . proc_or_func_declaration SEMICOLON procedure_or_function
    (15) procedure_or_function -> .
    (16) proc_or_func_declaration -> . procedure_declaration
    (17) proc_or_func_declaration -> . function_declaration
    (18) procedure_declaration -> . procedure_heading SEMICOLON block
    (21) function_declaration -> . function_heading SEMICOLON block
    (19) procedure_heading -> . PROCEDURE ID
    (20) procedure_heading -> . PROCEDURE ID LPAREN parameter_list RPAREN
    (22) function_heading -> . FUNCTION type
    (23) function_heading -> . FUNCTION ID COLON type
    (24) function_heading -> . FUNCTION ID LPAREN parameter_list RPAREN COLON type

    BEGIN           reduce using rule 15 (procedure_or_function -> .)
    VAR             reduce using rule 15 (procedure_or_function -> .)
    PROCEDURE       shift and go to state 16
    FUNCTION        shift and go to state 17

    proc_or_func_declaration       shift and go to state 11
    procedure_or_function          shift and go to state 68
    procedure_declaration          shift and go to state 12
    function_declaration           shift and go to state 13
    procedure_heading              shift and go to state 14
    function_heading               shift and go to state 15

state 26

    (18) procedure_declaration -> procedure_heading SEMICOLON . block
    (3) block -> . variable_declaration_part procedure_or_function statement_part
    (4) block -> . variable_declaration_part procedure_or_function variable_declaration_part statement_part
    (5) variable_declaration_part -> . VAR variable_declaration_list
    (6) variable_declaration_part -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    PROCEDURE       reduce using rule 6 (variable_declaration_part -> .)
    FUNCTION        reduce using rule 6 (variable_declaration_part -> .)
    BEGIN           reduce using rule 6 (variable_declaration_part -> .)

  ! VAR             [ reduce using rule 6 (variable_declaration_part -> .) ]

    block                          shift and go to state 69
    variable_declaration_part      shift and go to state 7

state 27

    (21) function_declaration -> function_heading SEMICOLON . block
    (3) block -> . variable_declaration_part procedure_or_function statement_part
    (4) block -> . variable_declaration_part procedure_or_function variable_declaration_part statement_part
    (5) variable_declaration_part -> . VAR variable_declaration_list
    (6) variable_declaration_part -> .

  ! shift/reduce conflict for VAR resolved as shift
    VAR             shift and go to state 8
    PROCEDURE       reduce using rule 6 (variable_declaration_part -> .)
    FUNCTION        reduce using rule 6 (variable_declaration_part -> .)
    BEGIN           reduce using rule 6 (variable_declaration_part -> .)

  ! VAR             [ reduce using rule 6 (variable_declaration_part -> .) ]

    block                          shift and go to state 70
    variable_declaration_part      shift and go to state 7

state 28

    (19) procedure_heading -> PROCEDURE ID .
    (20) procedure_heading -> PROCEDURE ID . LPAREN parameter_list RPAREN

    SEMICOLON       reduce using rule 19 (procedure_heading -> PROCEDURE ID .)
    LPAREN          shift and go to state 71


state 29

    (22) function_heading -> FUNCTION type .

    SEMICOLON       reduce using rule 22 (function_heading -> FUNCTION type .)


state 30

    (23) function_heading -> FUNCTION ID . COLON type
    (24) function_heading -> FUNCTION ID . LPAREN parameter_list RPAREN COLON type

    COLON           shift and go to state 72
    LPAREN          shift and go to state 73


state 31

    (28) type -> REAL .

    SEMICOLON       reduce using rule 28 (type -> REAL .)
    COMMA           reduce using rule 28 (type -> REAL .)
    RPAREN          reduce using rule 28 (type -> REAL .)


state 32

    (29) type -> INTEGER .

    SEMICOLON       reduce using rule 29 (type -> INTEGER .)
    COMMA           reduce using rule 29 (type -> INTEGER .)
    RPAREN          reduce using rule 29 (type -> INTEGER .)


state 33

    (30) type -> BOOLEAN .

    SEMICOLON       reduce using rule 30 (type -> BOOLEAN .)
    COMMA           reduce using rule 30 (type -> BOOLEAN .)
    RPAREN          reduce using rule 30 (type -> BOOLEAN .)


state 34

    (31) type -> STRING .

    SEMICOLON       reduce using rule 31 (type -> STRING .)
    COMMA           reduce using rule 31 (type -> STRING .)
    RPAREN          reduce using rule 31 (type -> STRING .)


state 35

    (32) type -> array_type .

    SEMICOLON       reduce using rule 32 (type -> array_type .)
    COMMA           reduce using rule 32 (type -> array_type .)
    RPAREN          reduce using rule 32 (type -> array_type .)


state 36

    (33) array_type -> ARRAY . LBRACKET range RBRACKET OF type

    LBRACKET        shift and go to state 74


state 37

    (7) variable_declaration_list -> variable_declaration_list variable_declaration .

    ID              reduce using rule 7 (variable_declaration_list -> variable_declaration_list variable_declaration .)
    PROCEDURE       reduce using rule 7 (variable_declaration_list -> variable_declaration_list variable_declaration .)
    FUNCTION        reduce using rule 7 (variable_declaration_list -> variable_declaration_list variable_declaration .)
    BEGIN           reduce using rule 7 (variable_declaration_list -> variable_declaration_list variable_declaration .)
    VAR             reduce using rule 7 (variable_declaration_list -> variable_declaration_list variable_declaration .)


state 38

    (9) variable_declaration -> id_list COLON . type SEMICOLON
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 75
    array_type                     shift and go to state 35

state 39

    (11) id_list -> ID LBRACKET . expression RBRACKET
    (13) id_list -> ID LBRACKET . expression RBRACKET COMMA id_list
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 77
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 40

    (12) id_list -> ID COMMA . id_list
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    ID              shift and go to state 21

    id_list                        shift and go to state 89

state 41

    (4) block -> variable_declaration_part procedure_or_function variable_declaration_part statement_part .

    DOT             reduce using rule 4 (block -> variable_declaration_part procedure_or_function variable_declaration_part statement_part .)
    SEMICOLON       reduce using rule 4 (block -> variable_declaration_part procedure_or_function variable_declaration_part statement_part .)


state 42

    (35) statement_part -> BEGIN statement_sequence . END

    END             shift and go to state 90


state 43

    (36) statement_sequence -> statement . SEMICOLON statement_sequence
    (37) statement_sequence -> statement .

    SEMICOLON       shift and go to state 91
    END             reduce using rule 37 (statement_sequence -> statement .)


state 44

    (38) statement -> assignment_statement .

    SEMICOLON       reduce using rule 38 (statement -> assignment_statement .)
    END             reduce using rule 38 (statement -> assignment_statement .)
    UNTIL           reduce using rule 38 (statement -> assignment_statement .)
    ELSE            reduce using rule 38 (statement -> assignment_statement .)


state 45

    (39) statement -> statement_part .

    SEMICOLON       reduce using rule 39 (statement -> statement_part .)
    END             reduce using rule 39 (statement -> statement_part .)
    UNTIL           reduce using rule 39 (statement -> statement_part .)
    ELSE            reduce using rule 39 (statement -> statement_part .)


state 46

    (40) statement -> if_statement .

    SEMICOLON       reduce using rule 40 (statement -> if_statement .)
    END             reduce using rule 40 (statement -> if_statement .)
    UNTIL           reduce using rule 40 (statement -> if_statement .)
    ELSE            reduce using rule 40 (statement -> if_statement .)


state 47

    (41) statement -> while_statement .

    SEMICOLON       reduce using rule 41 (statement -> while_statement .)
    END             reduce using rule 41 (statement -> while_statement .)
    UNTIL           reduce using rule 41 (statement -> while_statement .)
    ELSE            reduce using rule 41 (statement -> while_statement .)


state 48

    (42) statement -> repeat_statement .

    SEMICOLON       reduce using rule 42 (statement -> repeat_statement .)
    END             reduce using rule 42 (statement -> repeat_statement .)
    UNTIL           reduce using rule 42 (statement -> repeat_statement .)
    ELSE            reduce using rule 42 (statement -> repeat_statement .)


state 49

    (43) statement -> for_statement .

    SEMICOLON       reduce using rule 43 (statement -> for_statement .)
    END             reduce using rule 43 (statement -> for_statement .)
    UNTIL           reduce using rule 43 (statement -> for_statement .)
    ELSE            reduce using rule 43 (statement -> for_statement .)


state 50

    (44) statement -> procedure_or_function_call .

    SEMICOLON       reduce using rule 44 (statement -> procedure_or_function_call .)
    END             reduce using rule 44 (statement -> procedure_or_function_call .)
    UNTIL           reduce using rule 44 (statement -> procedure_or_function_call .)
    ELSE            reduce using rule 44 (statement -> procedure_or_function_call .)


state 51

    (45) statement -> writeln_statement .

    SEMICOLON       reduce using rule 45 (statement -> writeln_statement .)
    END             reduce using rule 45 (statement -> writeln_statement .)
    UNTIL           reduce using rule 45 (statement -> writeln_statement .)
    ELSE            reduce using rule 45 (statement -> writeln_statement .)


state 52

    (46) statement -> readln_statement .

    SEMICOLON       reduce using rule 46 (statement -> readln_statement .)
    END             reduce using rule 46 (statement -> readln_statement .)
    UNTIL           reduce using rule 46 (statement -> readln_statement .)
    ELSE            reduce using rule 46 (statement -> readln_statement .)


state 53

    (47) statement -> break_statement .

    SEMICOLON       reduce using rule 47 (statement -> break_statement .)
    END             reduce using rule 47 (statement -> break_statement .)
    UNTIL           reduce using rule 47 (statement -> break_statement .)
    ELSE            reduce using rule 47 (statement -> break_statement .)


state 54

    (48) statement -> continue_statement .

    SEMICOLON       reduce using rule 48 (statement -> continue_statement .)
    END             reduce using rule 48 (statement -> continue_statement .)
    UNTIL           reduce using rule 48 (statement -> continue_statement .)
    ELSE            reduce using rule 48 (statement -> continue_statement .)


state 55

    (49) statement -> case_statement .

    SEMICOLON       reduce using rule 49 (statement -> case_statement .)
    END             reduce using rule 49 (statement -> case_statement .)
    UNTIL           reduce using rule 49 (statement -> case_statement .)
    ELSE            reduce using rule 49 (statement -> case_statement .)


state 56

    (80) assignment_statement -> ID . ASSIGN expression
    (81) assignment_statement -> ID . ASSIGN procedure_or_function_call
    (82) assignment_statement -> ID . LBRACKET expression RBRACKET ASSIGN expression
    (68) procedure_or_function_call -> ID . LPAREN param_list RPAREN
    (69) procedure_or_function_call -> ID . LPAREN RPAREN
    (70) procedure_or_function_call -> ID .

    ASSIGN          shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    SEMICOLON       reduce using rule 70 (procedure_or_function_call -> ID .)
    END             reduce using rule 70 (procedure_or_function_call -> ID .)
    UNTIL           reduce using rule 70 (procedure_or_function_call -> ID .)
    ELSE            reduce using rule 70 (procedure_or_function_call -> ID .)


state 57

    (74) if_statement -> IF . expression THEN statement ELSE statement
    (75) if_statement -> IF . expression THEN statement
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 95
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 58

    (76) while_statement -> WHILE . expression DO statement
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 96
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 59

    (77) repeat_statement -> REPEAT . statement UNTIL expression
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 97
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 60

    (78) for_statement -> FOR . assignment_statement TO expression DO statement
    (79) for_statement -> FOR . assignment_statement DOWNTO expression DO statement
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression

    ID              shift and go to state 99

    assignment_statement           shift and go to state 98

state 61

    (58) writeln_statement -> WRITELN . LPAREN param_list RPAREN
    (59) writeln_statement -> WRITELN . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 62

    (60) writeln_statement -> WRITE . LPAREN param_list RPAREN
    (61) writeln_statement -> WRITE . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 63

    (62) readln_statement -> READLN . LPAREN id_list RPAREN
    (63) readln_statement -> READLN . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 64

    (64) readln_statement -> READ . LPAREN id_list RPAREN
    (65) readln_statement -> READ . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 65

    (66) break_statement -> BREAK .

    SEMICOLON       reduce using rule 66 (break_statement -> BREAK .)
    END             reduce using rule 66 (break_statement -> BREAK .)
    UNTIL           reduce using rule 66 (break_statement -> BREAK .)
    ELSE            reduce using rule 66 (break_statement -> BREAK .)


state 66

    (67) continue_statement -> CONTINUE .

    SEMICOLON       reduce using rule 67 (continue_statement -> CONTINUE .)
    END             reduce using rule 67 (continue_statement -> CONTINUE .)
    UNTIL           reduce using rule 67 (continue_statement -> CONTINUE .)
    ELSE            reduce using rule 67 (continue_statement -> CONTINUE .)


state 67

    (51) case_statement -> CASE . expression OF case_list END
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 104
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 68

    (14) procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function .

    BEGIN           reduce using rule 14 (procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function .)
    VAR             reduce using rule 14 (procedure_or_function -> proc_or_func_declaration SEMICOLON procedure_or_function .)


state 69

    (18) procedure_declaration -> procedure_heading SEMICOLON block .

    SEMICOLON       reduce using rule 18 (procedure_declaration -> procedure_heading SEMICOLON block .)


state 70

    (21) function_declaration -> function_heading SEMICOLON block .

    SEMICOLON       reduce using rule 21 (function_declaration -> function_heading SEMICOLON block .)


state 71

    (20) procedure_heading -> PROCEDURE ID LPAREN . parameter_list RPAREN
    (25) parameter_list -> . parameter COMMA parameter_list
    (26) parameter_list -> . parameter
    (27) parameter -> . ID COLON type

    ID              shift and go to state 105

    parameter_list                 shift and go to state 106
    parameter                      shift and go to state 107

state 72

    (23) function_heading -> FUNCTION ID COLON . type
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 108
    array_type                     shift and go to state 35

state 73

    (24) function_heading -> FUNCTION ID LPAREN . parameter_list RPAREN COLON type
    (25) parameter_list -> . parameter COMMA parameter_list
    (26) parameter_list -> . parameter
    (27) parameter -> . ID COLON type

    ID              shift and go to state 105

    parameter_list                 shift and go to state 109
    parameter                      shift and go to state 107

state 74

    (33) array_type -> ARRAY LBRACKET . range RBRACKET OF type
    (34) range -> . expression RANGE expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    range                          shift and go to state 110
    expression                     shift and go to state 111
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 75

    (9) variable_declaration -> id_list COLON type . SEMICOLON

    SEMICOLON       shift and go to state 112


state 76

    (104) element -> ID .
    (111) element -> ID . LBRACKET expression RBRACKET
    (68) procedure_or_function_call -> ID . LPAREN param_list RPAREN
    (69) procedure_or_function_call -> ID . LPAREN RPAREN
    (70) procedure_or_function_call -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIV resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for MOD resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for EQUALS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for THEN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DO resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for OF resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for RANGE resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for END resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for UNTIL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for TO resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 70 (procedure_or_function_call -> ID .)
    LBRACKET        shift and go to state 113
    LPAREN          shift and go to state 94
    TIMES           reduce using rule 70 (procedure_or_function_call -> ID .)
    DIVIDE          reduce using rule 70 (procedure_or_function_call -> ID .)
    PLUS            reduce using rule 70 (procedure_or_function_call -> ID .)
    MINUS           reduce using rule 70 (procedure_or_function_call -> ID .)
    DIV             reduce using rule 70 (procedure_or_function_call -> ID .)
    MOD             reduce using rule 70 (procedure_or_function_call -> ID .)
    EQUALS          reduce using rule 70 (procedure_or_function_call -> ID .)
    DIFFERENT       reduce using rule 70 (procedure_or_function_call -> ID .)
    LESSTHAN        reduce using rule 70 (procedure_or_function_call -> ID .)
    LESSEQUAL       reduce using rule 70 (procedure_or_function_call -> ID .)
    GREATERTHAN     reduce using rule 70 (procedure_or_function_call -> ID .)
    GREATEREQUAL    reduce using rule 70 (procedure_or_function_call -> ID .)
    RBRACKET        reduce using rule 70 (procedure_or_function_call -> ID .)
    AND             reduce using rule 70 (procedure_or_function_call -> ID .)
    OR              reduce using rule 70 (procedure_or_function_call -> ID .)
    THEN            reduce using rule 70 (procedure_or_function_call -> ID .)
    DO              reduce using rule 70 (procedure_or_function_call -> ID .)
    OF              reduce using rule 70 (procedure_or_function_call -> ID .)
    RANGE           reduce using rule 70 (procedure_or_function_call -> ID .)
    RPAREN          reduce using rule 70 (procedure_or_function_call -> ID .)
    SEMICOLON       reduce using rule 70 (procedure_or_function_call -> ID .)
    END             reduce using rule 70 (procedure_or_function_call -> ID .)
    UNTIL           reduce using rule 70 (procedure_or_function_call -> ID .)
    TO              reduce using rule 70 (procedure_or_function_call -> ID .)
    DOWNTO          reduce using rule 70 (procedure_or_function_call -> ID .)
    ELSE            reduce using rule 70 (procedure_or_function_call -> ID .)
    COMMA           reduce using rule 70 (procedure_or_function_call -> ID .)

  ! TIMES           [ reduce using rule 104 (element -> ID .) ]
  ! DIVIDE          [ reduce using rule 104 (element -> ID .) ]
  ! PLUS            [ reduce using rule 104 (element -> ID .) ]
  ! MINUS           [ reduce using rule 104 (element -> ID .) ]
  ! DIV             [ reduce using rule 104 (element -> ID .) ]
  ! MOD             [ reduce using rule 104 (element -> ID .) ]
  ! EQUALS          [ reduce using rule 104 (element -> ID .) ]
  ! DIFFERENT       [ reduce using rule 104 (element -> ID .) ]
  ! LESSTHAN        [ reduce using rule 104 (element -> ID .) ]
  ! LESSEQUAL       [ reduce using rule 104 (element -> ID .) ]
  ! GREATERTHAN     [ reduce using rule 104 (element -> ID .) ]
  ! GREATEREQUAL    [ reduce using rule 104 (element -> ID .) ]
  ! RBRACKET        [ reduce using rule 104 (element -> ID .) ]
  ! AND             [ reduce using rule 104 (element -> ID .) ]
  ! OR              [ reduce using rule 104 (element -> ID .) ]
  ! THEN            [ reduce using rule 104 (element -> ID .) ]
  ! DO              [ reduce using rule 104 (element -> ID .) ]
  ! OF              [ reduce using rule 104 (element -> ID .) ]
  ! RANGE           [ reduce using rule 104 (element -> ID .) ]
  ! RPAREN          [ reduce using rule 104 (element -> ID .) ]
  ! SEMICOLON       [ reduce using rule 104 (element -> ID .) ]
  ! END             [ reduce using rule 104 (element -> ID .) ]
  ! UNTIL           [ reduce using rule 104 (element -> ID .) ]
  ! TO              [ reduce using rule 104 (element -> ID .) ]
  ! DOWNTO          [ reduce using rule 104 (element -> ID .) ]
  ! ELSE            [ reduce using rule 104 (element -> ID .) ]
  ! COMMA           [ reduce using rule 104 (element -> ID .) ]


state 77

    (11) id_list -> ID LBRACKET expression . RBRACKET
    (13) id_list -> ID LBRACKET expression . RBRACKET COMMA id_list
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RBRACKET        shift and go to state 114
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 78

    (84) expression -> expression_m .
    (86) expression_m -> expression_m . sign expression_s
    (93) sign -> . PLUS
    (94) sign -> . MINUS
    (95) sign -> . DIV
    (96) sign -> . MOD
    (97) sign -> . EQUALS
    (98) sign -> . DIFFERENT
    (99) sign -> . LESSTHAN
    (100) sign -> . LESSEQUAL
    (101) sign -> . GREATERTHAN
    (102) sign -> . GREATEREQUAL

    RBRACKET        reduce using rule 84 (expression -> expression_m .)
    AND             reduce using rule 84 (expression -> expression_m .)
    OR              reduce using rule 84 (expression -> expression_m .)
    THEN            reduce using rule 84 (expression -> expression_m .)
    DO              reduce using rule 84 (expression -> expression_m .)
    OF              reduce using rule 84 (expression -> expression_m .)
    RANGE           reduce using rule 84 (expression -> expression_m .)
    RPAREN          reduce using rule 84 (expression -> expression_m .)
    SEMICOLON       reduce using rule 84 (expression -> expression_m .)
    END             reduce using rule 84 (expression -> expression_m .)
    UNTIL           reduce using rule 84 (expression -> expression_m .)
    TO              reduce using rule 84 (expression -> expression_m .)
    DOWNTO          reduce using rule 84 (expression -> expression_m .)
    ELSE            reduce using rule 84 (expression -> expression_m .)
    COMMA           reduce using rule 84 (expression -> expression_m .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    DIV             shift and go to state 121
    MOD             shift and go to state 122
    EQUALS          shift and go to state 123
    DIFFERENT       shift and go to state 124
    LESSTHAN        shift and go to state 125
    LESSEQUAL       shift and go to state 126
    GREATERTHAN     shift and go to state 127
    GREATEREQUAL    shift and go to state 128

    sign                           shift and go to state 118

state 79

    (85) expression_m -> expression_s .
    (88) expression_s -> expression_s . psign element
    (91) psign -> . TIMES
    (92) psign -> . DIVIDE

    PLUS            reduce using rule 85 (expression_m -> expression_s .)
    MINUS           reduce using rule 85 (expression_m -> expression_s .)
    DIV             reduce using rule 85 (expression_m -> expression_s .)
    MOD             reduce using rule 85 (expression_m -> expression_s .)
    EQUALS          reduce using rule 85 (expression_m -> expression_s .)
    DIFFERENT       reduce using rule 85 (expression_m -> expression_s .)
    LESSTHAN        reduce using rule 85 (expression_m -> expression_s .)
    LESSEQUAL       reduce using rule 85 (expression_m -> expression_s .)
    GREATERTHAN     reduce using rule 85 (expression_m -> expression_s .)
    GREATEREQUAL    reduce using rule 85 (expression_m -> expression_s .)
    RBRACKET        reduce using rule 85 (expression_m -> expression_s .)
    AND             reduce using rule 85 (expression_m -> expression_s .)
    OR              reduce using rule 85 (expression_m -> expression_s .)
    THEN            reduce using rule 85 (expression_m -> expression_s .)
    DO              reduce using rule 85 (expression_m -> expression_s .)
    OF              reduce using rule 85 (expression_m -> expression_s .)
    RANGE           reduce using rule 85 (expression_m -> expression_s .)
    RPAREN          reduce using rule 85 (expression_m -> expression_s .)
    SEMICOLON       reduce using rule 85 (expression_m -> expression_s .)
    END             reduce using rule 85 (expression_m -> expression_s .)
    UNTIL           reduce using rule 85 (expression_m -> expression_s .)
    TO              reduce using rule 85 (expression_m -> expression_s .)
    DOWNTO          reduce using rule 85 (expression_m -> expression_s .)
    ELSE            reduce using rule 85 (expression_m -> expression_s .)
    COMMA           reduce using rule 85 (expression_m -> expression_s .)
    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131

    psign                          shift and go to state 129

state 80

    (87) expression_s -> element .

    TIMES           reduce using rule 87 (expression_s -> element .)
    DIVIDE          reduce using rule 87 (expression_s -> element .)
    PLUS            reduce using rule 87 (expression_s -> element .)
    MINUS           reduce using rule 87 (expression_s -> element .)
    DIV             reduce using rule 87 (expression_s -> element .)
    MOD             reduce using rule 87 (expression_s -> element .)
    EQUALS          reduce using rule 87 (expression_s -> element .)
    DIFFERENT       reduce using rule 87 (expression_s -> element .)
    LESSTHAN        reduce using rule 87 (expression_s -> element .)
    LESSEQUAL       reduce using rule 87 (expression_s -> element .)
    GREATERTHAN     reduce using rule 87 (expression_s -> element .)
    GREATEREQUAL    reduce using rule 87 (expression_s -> element .)
    RBRACKET        reduce using rule 87 (expression_s -> element .)
    AND             reduce using rule 87 (expression_s -> element .)
    OR              reduce using rule 87 (expression_s -> element .)
    THEN            reduce using rule 87 (expression_s -> element .)
    DO              reduce using rule 87 (expression_s -> element .)
    OF              reduce using rule 87 (expression_s -> element .)
    RANGE           reduce using rule 87 (expression_s -> element .)
    RPAREN          reduce using rule 87 (expression_s -> element .)
    SEMICOLON       reduce using rule 87 (expression_s -> element .)
    END             reduce using rule 87 (expression_s -> element .)
    UNTIL           reduce using rule 87 (expression_s -> element .)
    TO              reduce using rule 87 (expression_s -> element .)
    DOWNTO          reduce using rule 87 (expression_s -> element .)
    ELSE            reduce using rule 87 (expression_s -> element .)
    COMMA           reduce using rule 87 (expression_s -> element .)


state 81

    (105) element -> NUMBER .

    TIMES           reduce using rule 105 (element -> NUMBER .)
    DIVIDE          reduce using rule 105 (element -> NUMBER .)
    PLUS            reduce using rule 105 (element -> NUMBER .)
    MINUS           reduce using rule 105 (element -> NUMBER .)
    DIV             reduce using rule 105 (element -> NUMBER .)
    MOD             reduce using rule 105 (element -> NUMBER .)
    EQUALS          reduce using rule 105 (element -> NUMBER .)
    DIFFERENT       reduce using rule 105 (element -> NUMBER .)
    LESSTHAN        reduce using rule 105 (element -> NUMBER .)
    LESSEQUAL       reduce using rule 105 (element -> NUMBER .)
    GREATERTHAN     reduce using rule 105 (element -> NUMBER .)
    GREATEREQUAL    reduce using rule 105 (element -> NUMBER .)
    RBRACKET        reduce using rule 105 (element -> NUMBER .)
    AND             reduce using rule 105 (element -> NUMBER .)
    OR              reduce using rule 105 (element -> NUMBER .)
    THEN            reduce using rule 105 (element -> NUMBER .)
    DO              reduce using rule 105 (element -> NUMBER .)
    OF              reduce using rule 105 (element -> NUMBER .)
    RANGE           reduce using rule 105 (element -> NUMBER .)
    RPAREN          reduce using rule 105 (element -> NUMBER .)
    SEMICOLON       reduce using rule 105 (element -> NUMBER .)
    END             reduce using rule 105 (element -> NUMBER .)
    UNTIL           reduce using rule 105 (element -> NUMBER .)
    TO              reduce using rule 105 (element -> NUMBER .)
    DOWNTO          reduce using rule 105 (element -> NUMBER .)
    ELSE            reduce using rule 105 (element -> NUMBER .)
    COMMA           reduce using rule 105 (element -> NUMBER .)


state 82

    (106) element -> BOOL .

    TIMES           reduce using rule 106 (element -> BOOL .)
    DIVIDE          reduce using rule 106 (element -> BOOL .)
    PLUS            reduce using rule 106 (element -> BOOL .)
    MINUS           reduce using rule 106 (element -> BOOL .)
    DIV             reduce using rule 106 (element -> BOOL .)
    MOD             reduce using rule 106 (element -> BOOL .)
    EQUALS          reduce using rule 106 (element -> BOOL .)
    DIFFERENT       reduce using rule 106 (element -> BOOL .)
    LESSTHAN        reduce using rule 106 (element -> BOOL .)
    LESSEQUAL       reduce using rule 106 (element -> BOOL .)
    GREATERTHAN     reduce using rule 106 (element -> BOOL .)
    GREATEREQUAL    reduce using rule 106 (element -> BOOL .)
    RBRACKET        reduce using rule 106 (element -> BOOL .)
    AND             reduce using rule 106 (element -> BOOL .)
    OR              reduce using rule 106 (element -> BOOL .)
    THEN            reduce using rule 106 (element -> BOOL .)
    DO              reduce using rule 106 (element -> BOOL .)
    OF              reduce using rule 106 (element -> BOOL .)
    RANGE           reduce using rule 106 (element -> BOOL .)
    RPAREN          reduce using rule 106 (element -> BOOL .)
    SEMICOLON       reduce using rule 106 (element -> BOOL .)
    END             reduce using rule 106 (element -> BOOL .)
    UNTIL           reduce using rule 106 (element -> BOOL .)
    TO              reduce using rule 106 (element -> BOOL .)
    DOWNTO          reduce using rule 106 (element -> BOOL .)
    ELSE            reduce using rule 106 (element -> BOOL .)
    COMMA           reduce using rule 106 (element -> BOOL .)


state 83

    (107) element -> PHRASE .

    TIMES           reduce using rule 107 (element -> PHRASE .)
    DIVIDE          reduce using rule 107 (element -> PHRASE .)
    PLUS            reduce using rule 107 (element -> PHRASE .)
    MINUS           reduce using rule 107 (element -> PHRASE .)
    DIV             reduce using rule 107 (element -> PHRASE .)
    MOD             reduce using rule 107 (element -> PHRASE .)
    EQUALS          reduce using rule 107 (element -> PHRASE .)
    DIFFERENT       reduce using rule 107 (element -> PHRASE .)
    LESSTHAN        reduce using rule 107 (element -> PHRASE .)
    LESSEQUAL       reduce using rule 107 (element -> PHRASE .)
    GREATERTHAN     reduce using rule 107 (element -> PHRASE .)
    GREATEREQUAL    reduce using rule 107 (element -> PHRASE .)
    RBRACKET        reduce using rule 107 (element -> PHRASE .)
    AND             reduce using rule 107 (element -> PHRASE .)
    OR              reduce using rule 107 (element -> PHRASE .)
    THEN            reduce using rule 107 (element -> PHRASE .)
    DO              reduce using rule 107 (element -> PHRASE .)
    OF              reduce using rule 107 (element -> PHRASE .)
    RANGE           reduce using rule 107 (element -> PHRASE .)
    RPAREN          reduce using rule 107 (element -> PHRASE .)
    SEMICOLON       reduce using rule 107 (element -> PHRASE .)
    END             reduce using rule 107 (element -> PHRASE .)
    UNTIL           reduce using rule 107 (element -> PHRASE .)
    TO              reduce using rule 107 (element -> PHRASE .)
    DOWNTO          reduce using rule 107 (element -> PHRASE .)
    ELSE            reduce using rule 107 (element -> PHRASE .)
    COMMA           reduce using rule 107 (element -> PHRASE .)


state 84

    (108) element -> LPAREN . expression RPAREN
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 132
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 85

    (109) element -> NOT . element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    element                        shift and go to state 133
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 86

    (110) element -> length_function .

    TIMES           reduce using rule 110 (element -> length_function .)
    DIVIDE          reduce using rule 110 (element -> length_function .)
    PLUS            reduce using rule 110 (element -> length_function .)
    MINUS           reduce using rule 110 (element -> length_function .)
    DIV             reduce using rule 110 (element -> length_function .)
    MOD             reduce using rule 110 (element -> length_function .)
    EQUALS          reduce using rule 110 (element -> length_function .)
    DIFFERENT       reduce using rule 110 (element -> length_function .)
    LESSTHAN        reduce using rule 110 (element -> length_function .)
    LESSEQUAL       reduce using rule 110 (element -> length_function .)
    GREATERTHAN     reduce using rule 110 (element -> length_function .)
    GREATEREQUAL    reduce using rule 110 (element -> length_function .)
    RBRACKET        reduce using rule 110 (element -> length_function .)
    AND             reduce using rule 110 (element -> length_function .)
    OR              reduce using rule 110 (element -> length_function .)
    THEN            reduce using rule 110 (element -> length_function .)
    DO              reduce using rule 110 (element -> length_function .)
    OF              reduce using rule 110 (element -> length_function .)
    RANGE           reduce using rule 110 (element -> length_function .)
    RPAREN          reduce using rule 110 (element -> length_function .)
    SEMICOLON       reduce using rule 110 (element -> length_function .)
    END             reduce using rule 110 (element -> length_function .)
    UNTIL           reduce using rule 110 (element -> length_function .)
    TO              reduce using rule 110 (element -> length_function .)
    DOWNTO          reduce using rule 110 (element -> length_function .)
    ELSE            reduce using rule 110 (element -> length_function .)
    COMMA           reduce using rule 110 (element -> length_function .)


state 87

    (112) element -> procedure_or_function_call .

    TIMES           reduce using rule 112 (element -> procedure_or_function_call .)
    DIVIDE          reduce using rule 112 (element -> procedure_or_function_call .)
    PLUS            reduce using rule 112 (element -> procedure_or_function_call .)
    MINUS           reduce using rule 112 (element -> procedure_or_function_call .)
    DIV             reduce using rule 112 (element -> procedure_or_function_call .)
    MOD             reduce using rule 112 (element -> procedure_or_function_call .)
    EQUALS          reduce using rule 112 (element -> procedure_or_function_call .)
    DIFFERENT       reduce using rule 112 (element -> procedure_or_function_call .)
    LESSTHAN        reduce using rule 112 (element -> procedure_or_function_call .)
    LESSEQUAL       reduce using rule 112 (element -> procedure_or_function_call .)
    GREATERTHAN     reduce using rule 112 (element -> procedure_or_function_call .)
    GREATEREQUAL    reduce using rule 112 (element -> procedure_or_function_call .)
    RBRACKET        reduce using rule 112 (element -> procedure_or_function_call .)
    AND             reduce using rule 112 (element -> procedure_or_function_call .)
    OR              reduce using rule 112 (element -> procedure_or_function_call .)
    THEN            reduce using rule 112 (element -> procedure_or_function_call .)
    DO              reduce using rule 112 (element -> procedure_or_function_call .)
    OF              reduce using rule 112 (element -> procedure_or_function_call .)
    RANGE           reduce using rule 112 (element -> procedure_or_function_call .)
    RPAREN          reduce using rule 112 (element -> procedure_or_function_call .)
    SEMICOLON       reduce using rule 112 (element -> procedure_or_function_call .)
    END             reduce using rule 112 (element -> procedure_or_function_call .)
    UNTIL           reduce using rule 112 (element -> procedure_or_function_call .)
    TO              reduce using rule 112 (element -> procedure_or_function_call .)
    DOWNTO          reduce using rule 112 (element -> procedure_or_function_call .)
    ELSE            reduce using rule 112 (element -> procedure_or_function_call .)
    COMMA           reduce using rule 112 (element -> procedure_or_function_call .)


state 88

    (103) length_function -> LENGTH . LPAREN expression RPAREN

    LPAREN          shift and go to state 134


state 89

    (12) id_list -> ID COMMA id_list .

    COLON           reduce using rule 12 (id_list -> ID COMMA id_list .)
    RPAREN          reduce using rule 12 (id_list -> ID COMMA id_list .)


state 90

    (35) statement_part -> BEGIN statement_sequence END .

    DOT             reduce using rule 35 (statement_part -> BEGIN statement_sequence END .)
    SEMICOLON       reduce using rule 35 (statement_part -> BEGIN statement_sequence END .)
    END             reduce using rule 35 (statement_part -> BEGIN statement_sequence END .)
    UNTIL           reduce using rule 35 (statement_part -> BEGIN statement_sequence END .)
    ELSE            reduce using rule 35 (statement_part -> BEGIN statement_sequence END .)


state 91

    (36) statement_sequence -> statement SEMICOLON . statement_sequence
    (36) statement_sequence -> . statement SEMICOLON statement_sequence
    (37) statement_sequence -> . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 43
    statement_sequence             shift and go to state 135
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 92

    (80) assignment_statement -> ID ASSIGN . expression
    (81) assignment_statement -> ID ASSIGN . procedure_or_function_call
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN

    ID              shift and go to state 136
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 137
    procedure_or_function_call     shift and go to state 138
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86

state 93

    (82) assignment_statement -> ID LBRACKET . expression RBRACKET ASSIGN expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 139
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 94

    (68) procedure_or_function_call -> ID LPAREN . param_list RPAREN
    (69) procedure_or_function_call -> ID LPAREN . RPAREN
    (71) param_list -> . param_list COMMA param
    (72) param_list -> . param
    (73) param -> . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    RPAREN          shift and go to state 141
    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    param_list                     shift and go to state 140
    param                          shift and go to state 142
    expression                     shift and go to state 143
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 95

    (74) if_statement -> IF expression . THEN statement ELSE statement
    (75) if_statement -> IF expression . THEN statement
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    THEN            shift and go to state 144
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 96

    (76) while_statement -> WHILE expression . DO statement
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    DO              shift and go to state 145
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 97

    (77) repeat_statement -> REPEAT statement . UNTIL expression

    UNTIL           shift and go to state 146


state 98

    (78) for_statement -> FOR assignment_statement . TO expression DO statement
    (79) for_statement -> FOR assignment_statement . DOWNTO expression DO statement

    TO              shift and go to state 147
    DOWNTO          shift and go to state 148


state 99

    (80) assignment_statement -> ID . ASSIGN expression
    (81) assignment_statement -> ID . ASSIGN procedure_or_function_call
    (82) assignment_statement -> ID . LBRACKET expression RBRACKET ASSIGN expression

    ASSIGN          shift and go to state 92
    LBRACKET        shift and go to state 93


state 100

    (58) writeln_statement -> WRITELN LPAREN . param_list RPAREN
    (59) writeln_statement -> WRITELN LPAREN . RPAREN
    (71) param_list -> . param_list COMMA param
    (72) param_list -> . param
    (73) param -> . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    RPAREN          shift and go to state 150
    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    param_list                     shift and go to state 149
    param                          shift and go to state 142
    expression                     shift and go to state 143
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 101

    (60) writeln_statement -> WRITE LPAREN . param_list RPAREN
    (61) writeln_statement -> WRITE LPAREN . RPAREN
    (71) param_list -> . param_list COMMA param
    (72) param_list -> . param
    (73) param -> . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    RPAREN          shift and go to state 152
    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    param_list                     shift and go to state 151
    param                          shift and go to state 142
    expression                     shift and go to state 143
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 102

    (62) readln_statement -> READLN LPAREN . id_list RPAREN
    (63) readln_statement -> READLN LPAREN . RPAREN
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    RPAREN          shift and go to state 154
    ID              shift and go to state 21

    id_list                        shift and go to state 153

state 103

    (64) readln_statement -> READ LPAREN . id_list RPAREN
    (65) readln_statement -> READ LPAREN . RPAREN
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    RPAREN          shift and go to state 156
    ID              shift and go to state 21

    id_list                        shift and go to state 155

state 104

    (51) case_statement -> CASE expression . OF case_list END
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    OF              shift and go to state 157
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 105

    (27) parameter -> ID . COLON type

    COLON           shift and go to state 158


state 106

    (20) procedure_heading -> PROCEDURE ID LPAREN parameter_list . RPAREN

    RPAREN          shift and go to state 159


state 107

    (25) parameter_list -> parameter . COMMA parameter_list
    (26) parameter_list -> parameter .

    COMMA           shift and go to state 160
    RPAREN          reduce using rule 26 (parameter_list -> parameter .)


state 108

    (23) function_heading -> FUNCTION ID COLON type .

    SEMICOLON       reduce using rule 23 (function_heading -> FUNCTION ID COLON type .)


state 109

    (24) function_heading -> FUNCTION ID LPAREN parameter_list . RPAREN COLON type

    RPAREN          shift and go to state 161


state 110

    (33) array_type -> ARRAY LBRACKET range . RBRACKET OF type

    RBRACKET        shift and go to state 162


state 111

    (34) range -> expression . RANGE expression
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RANGE           shift and go to state 163
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 112

    (9) variable_declaration -> id_list COLON type SEMICOLON .

    ID              reduce using rule 9 (variable_declaration -> id_list COLON type SEMICOLON .)
    PROCEDURE       reduce using rule 9 (variable_declaration -> id_list COLON type SEMICOLON .)
    FUNCTION        reduce using rule 9 (variable_declaration -> id_list COLON type SEMICOLON .)
    BEGIN           reduce using rule 9 (variable_declaration -> id_list COLON type SEMICOLON .)
    VAR             reduce using rule 9 (variable_declaration -> id_list COLON type SEMICOLON .)


state 113

    (111) element -> ID LBRACKET . expression RBRACKET
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 164
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 114

    (11) id_list -> ID LBRACKET expression RBRACKET .
    (13) id_list -> ID LBRACKET expression RBRACKET . COMMA id_list

    COLON           reduce using rule 11 (id_list -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 11 (id_list -> ID LBRACKET expression RBRACKET .)
    COMMA           shift and go to state 165


state 115

    (83) expression -> expression and_or . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression_m                   shift and go to state 166
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 116

    (89) and_or -> AND .

    ID              reduce using rule 89 (and_or -> AND .)
    NUMBER          reduce using rule 89 (and_or -> AND .)
    BOOL            reduce using rule 89 (and_or -> AND .)
    PHRASE          reduce using rule 89 (and_or -> AND .)
    LPAREN          reduce using rule 89 (and_or -> AND .)
    NOT             reduce using rule 89 (and_or -> AND .)
    LENGTH          reduce using rule 89 (and_or -> AND .)


state 117

    (90) and_or -> OR .

    ID              reduce using rule 90 (and_or -> OR .)
    NUMBER          reduce using rule 90 (and_or -> OR .)
    BOOL            reduce using rule 90 (and_or -> OR .)
    PHRASE          reduce using rule 90 (and_or -> OR .)
    LPAREN          reduce using rule 90 (and_or -> OR .)
    NOT             reduce using rule 90 (and_or -> OR .)
    LENGTH          reduce using rule 90 (and_or -> OR .)


state 118

    (86) expression_m -> expression_m sign . expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression_s                   shift and go to state 167
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 119

    (93) sign -> PLUS .

    ID              reduce using rule 93 (sign -> PLUS .)
    NUMBER          reduce using rule 93 (sign -> PLUS .)
    BOOL            reduce using rule 93 (sign -> PLUS .)
    PHRASE          reduce using rule 93 (sign -> PLUS .)
    LPAREN          reduce using rule 93 (sign -> PLUS .)
    NOT             reduce using rule 93 (sign -> PLUS .)
    LENGTH          reduce using rule 93 (sign -> PLUS .)


state 120

    (94) sign -> MINUS .

    ID              reduce using rule 94 (sign -> MINUS .)
    NUMBER          reduce using rule 94 (sign -> MINUS .)
    BOOL            reduce using rule 94 (sign -> MINUS .)
    PHRASE          reduce using rule 94 (sign -> MINUS .)
    LPAREN          reduce using rule 94 (sign -> MINUS .)
    NOT             reduce using rule 94 (sign -> MINUS .)
    LENGTH          reduce using rule 94 (sign -> MINUS .)


state 121

    (95) sign -> DIV .

    ID              reduce using rule 95 (sign -> DIV .)
    NUMBER          reduce using rule 95 (sign -> DIV .)
    BOOL            reduce using rule 95 (sign -> DIV .)
    PHRASE          reduce using rule 95 (sign -> DIV .)
    LPAREN          reduce using rule 95 (sign -> DIV .)
    NOT             reduce using rule 95 (sign -> DIV .)
    LENGTH          reduce using rule 95 (sign -> DIV .)


state 122

    (96) sign -> MOD .

    ID              reduce using rule 96 (sign -> MOD .)
    NUMBER          reduce using rule 96 (sign -> MOD .)
    BOOL            reduce using rule 96 (sign -> MOD .)
    PHRASE          reduce using rule 96 (sign -> MOD .)
    LPAREN          reduce using rule 96 (sign -> MOD .)
    NOT             reduce using rule 96 (sign -> MOD .)
    LENGTH          reduce using rule 96 (sign -> MOD .)


state 123

    (97) sign -> EQUALS .

    ID              reduce using rule 97 (sign -> EQUALS .)
    NUMBER          reduce using rule 97 (sign -> EQUALS .)
    BOOL            reduce using rule 97 (sign -> EQUALS .)
    PHRASE          reduce using rule 97 (sign -> EQUALS .)
    LPAREN          reduce using rule 97 (sign -> EQUALS .)
    NOT             reduce using rule 97 (sign -> EQUALS .)
    LENGTH          reduce using rule 97 (sign -> EQUALS .)


state 124

    (98) sign -> DIFFERENT .

    ID              reduce using rule 98 (sign -> DIFFERENT .)
    NUMBER          reduce using rule 98 (sign -> DIFFERENT .)
    BOOL            reduce using rule 98 (sign -> DIFFERENT .)
    PHRASE          reduce using rule 98 (sign -> DIFFERENT .)
    LPAREN          reduce using rule 98 (sign -> DIFFERENT .)
    NOT             reduce using rule 98 (sign -> DIFFERENT .)
    LENGTH          reduce using rule 98 (sign -> DIFFERENT .)


state 125

    (99) sign -> LESSTHAN .

    ID              reduce using rule 99 (sign -> LESSTHAN .)
    NUMBER          reduce using rule 99 (sign -> LESSTHAN .)
    BOOL            reduce using rule 99 (sign -> LESSTHAN .)
    PHRASE          reduce using rule 99 (sign -> LESSTHAN .)
    LPAREN          reduce using rule 99 (sign -> LESSTHAN .)
    NOT             reduce using rule 99 (sign -> LESSTHAN .)
    LENGTH          reduce using rule 99 (sign -> LESSTHAN .)


state 126

    (100) sign -> LESSEQUAL .

    ID              reduce using rule 100 (sign -> LESSEQUAL .)
    NUMBER          reduce using rule 100 (sign -> LESSEQUAL .)
    BOOL            reduce using rule 100 (sign -> LESSEQUAL .)
    PHRASE          reduce using rule 100 (sign -> LESSEQUAL .)
    LPAREN          reduce using rule 100 (sign -> LESSEQUAL .)
    NOT             reduce using rule 100 (sign -> LESSEQUAL .)
    LENGTH          reduce using rule 100 (sign -> LESSEQUAL .)


state 127

    (101) sign -> GREATERTHAN .

    ID              reduce using rule 101 (sign -> GREATERTHAN .)
    NUMBER          reduce using rule 101 (sign -> GREATERTHAN .)
    BOOL            reduce using rule 101 (sign -> GREATERTHAN .)
    PHRASE          reduce using rule 101 (sign -> GREATERTHAN .)
    LPAREN          reduce using rule 101 (sign -> GREATERTHAN .)
    NOT             reduce using rule 101 (sign -> GREATERTHAN .)
    LENGTH          reduce using rule 101 (sign -> GREATERTHAN .)


state 128

    (102) sign -> GREATEREQUAL .

    ID              reduce using rule 102 (sign -> GREATEREQUAL .)
    NUMBER          reduce using rule 102 (sign -> GREATEREQUAL .)
    BOOL            reduce using rule 102 (sign -> GREATEREQUAL .)
    PHRASE          reduce using rule 102 (sign -> GREATEREQUAL .)
    LPAREN          reduce using rule 102 (sign -> GREATEREQUAL .)
    NOT             reduce using rule 102 (sign -> GREATEREQUAL .)
    LENGTH          reduce using rule 102 (sign -> GREATEREQUAL .)


state 129

    (88) expression_s -> expression_s psign . element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    element                        shift and go to state 168
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 130

    (91) psign -> TIMES .

    ID              reduce using rule 91 (psign -> TIMES .)
    NUMBER          reduce using rule 91 (psign -> TIMES .)
    BOOL            reduce using rule 91 (psign -> TIMES .)
    PHRASE          reduce using rule 91 (psign -> TIMES .)
    LPAREN          reduce using rule 91 (psign -> TIMES .)
    NOT             reduce using rule 91 (psign -> TIMES .)
    LENGTH          reduce using rule 91 (psign -> TIMES .)


state 131

    (92) psign -> DIVIDE .

    ID              reduce using rule 92 (psign -> DIVIDE .)
    NUMBER          reduce using rule 92 (psign -> DIVIDE .)
    BOOL            reduce using rule 92 (psign -> DIVIDE .)
    PHRASE          reduce using rule 92 (psign -> DIVIDE .)
    LPAREN          reduce using rule 92 (psign -> DIVIDE .)
    NOT             reduce using rule 92 (psign -> DIVIDE .)
    LENGTH          reduce using rule 92 (psign -> DIVIDE .)


state 132

    (108) element -> LPAREN expression . RPAREN
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RPAREN          shift and go to state 169
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 133

    (109) element -> NOT element .

    TIMES           reduce using rule 109 (element -> NOT element .)
    DIVIDE          reduce using rule 109 (element -> NOT element .)
    PLUS            reduce using rule 109 (element -> NOT element .)
    MINUS           reduce using rule 109 (element -> NOT element .)
    DIV             reduce using rule 109 (element -> NOT element .)
    MOD             reduce using rule 109 (element -> NOT element .)
    EQUALS          reduce using rule 109 (element -> NOT element .)
    DIFFERENT       reduce using rule 109 (element -> NOT element .)
    LESSTHAN        reduce using rule 109 (element -> NOT element .)
    LESSEQUAL       reduce using rule 109 (element -> NOT element .)
    GREATERTHAN     reduce using rule 109 (element -> NOT element .)
    GREATEREQUAL    reduce using rule 109 (element -> NOT element .)
    RBRACKET        reduce using rule 109 (element -> NOT element .)
    AND             reduce using rule 109 (element -> NOT element .)
    OR              reduce using rule 109 (element -> NOT element .)
    THEN            reduce using rule 109 (element -> NOT element .)
    DO              reduce using rule 109 (element -> NOT element .)
    OF              reduce using rule 109 (element -> NOT element .)
    RANGE           reduce using rule 109 (element -> NOT element .)
    RPAREN          reduce using rule 109 (element -> NOT element .)
    SEMICOLON       reduce using rule 109 (element -> NOT element .)
    END             reduce using rule 109 (element -> NOT element .)
    UNTIL           reduce using rule 109 (element -> NOT element .)
    TO              reduce using rule 109 (element -> NOT element .)
    DOWNTO          reduce using rule 109 (element -> NOT element .)
    ELSE            reduce using rule 109 (element -> NOT element .)
    COMMA           reduce using rule 109 (element -> NOT element .)


state 134

    (103) length_function -> LENGTH LPAREN . expression RPAREN
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 170
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 135

    (36) statement_sequence -> statement SEMICOLON statement_sequence .

    END             reduce using rule 36 (statement_sequence -> statement SEMICOLON statement_sequence .)


state 136

    (68) procedure_or_function_call -> ID . LPAREN param_list RPAREN
    (69) procedure_or_function_call -> ID . LPAREN RPAREN
    (70) procedure_or_function_call -> ID .
    (104) element -> ID .
    (111) element -> ID . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for TIMES resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIV resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for MOD resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for EQUALS resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for END resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for UNTIL resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for TO resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 70 (procedure_or_function_call -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 70 (procedure_or_function_call -> ID .)
    LPAREN          shift and go to state 94
    SEMICOLON       reduce using rule 70 (procedure_or_function_call -> ID .)
    END             reduce using rule 70 (procedure_or_function_call -> ID .)
    UNTIL           reduce using rule 70 (procedure_or_function_call -> ID .)
    TO              reduce using rule 70 (procedure_or_function_call -> ID .)
    DOWNTO          reduce using rule 70 (procedure_or_function_call -> ID .)
    TIMES           reduce using rule 70 (procedure_or_function_call -> ID .)
    DIVIDE          reduce using rule 70 (procedure_or_function_call -> ID .)
    PLUS            reduce using rule 70 (procedure_or_function_call -> ID .)
    MINUS           reduce using rule 70 (procedure_or_function_call -> ID .)
    DIV             reduce using rule 70 (procedure_or_function_call -> ID .)
    MOD             reduce using rule 70 (procedure_or_function_call -> ID .)
    EQUALS          reduce using rule 70 (procedure_or_function_call -> ID .)
    DIFFERENT       reduce using rule 70 (procedure_or_function_call -> ID .)
    LESSTHAN        reduce using rule 70 (procedure_or_function_call -> ID .)
    LESSEQUAL       reduce using rule 70 (procedure_or_function_call -> ID .)
    GREATERTHAN     reduce using rule 70 (procedure_or_function_call -> ID .)
    GREATEREQUAL    reduce using rule 70 (procedure_or_function_call -> ID .)
    AND             reduce using rule 70 (procedure_or_function_call -> ID .)
    OR              reduce using rule 70 (procedure_or_function_call -> ID .)
    ELSE            reduce using rule 70 (procedure_or_function_call -> ID .)
    LBRACKET        shift and go to state 113

  ! TIMES           [ reduce using rule 104 (element -> ID .) ]
  ! DIVIDE          [ reduce using rule 104 (element -> ID .) ]
  ! PLUS            [ reduce using rule 104 (element -> ID .) ]
  ! MINUS           [ reduce using rule 104 (element -> ID .) ]
  ! DIV             [ reduce using rule 104 (element -> ID .) ]
  ! MOD             [ reduce using rule 104 (element -> ID .) ]
  ! EQUALS          [ reduce using rule 104 (element -> ID .) ]
  ! DIFFERENT       [ reduce using rule 104 (element -> ID .) ]
  ! LESSTHAN        [ reduce using rule 104 (element -> ID .) ]
  ! LESSEQUAL       [ reduce using rule 104 (element -> ID .) ]
  ! GREATERTHAN     [ reduce using rule 104 (element -> ID .) ]
  ! GREATEREQUAL    [ reduce using rule 104 (element -> ID .) ]
  ! AND             [ reduce using rule 104 (element -> ID .) ]
  ! OR              [ reduce using rule 104 (element -> ID .) ]
  ! SEMICOLON       [ reduce using rule 104 (element -> ID .) ]
  ! END             [ reduce using rule 104 (element -> ID .) ]
  ! UNTIL           [ reduce using rule 104 (element -> ID .) ]
  ! TO              [ reduce using rule 104 (element -> ID .) ]
  ! DOWNTO          [ reduce using rule 104 (element -> ID .) ]
  ! ELSE            [ reduce using rule 104 (element -> ID .) ]


state 137

    (80) assignment_statement -> ID ASSIGN expression .
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    SEMICOLON       reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    END             reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    UNTIL           reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    TO              reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    DOWNTO          reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 80 (assignment_statement -> ID ASSIGN expression .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 138

    (81) assignment_statement -> ID ASSIGN procedure_or_function_call .
    (112) element -> procedure_or_function_call .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
  ! reduce/reduce conflict for END resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
  ! reduce/reduce conflict for UNTIL resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
  ! reduce/reduce conflict for TO resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
  ! reduce/reduce conflict for DOWNTO resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
  ! reduce/reduce conflict for ELSE resolved using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    SEMICOLON       reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    END             reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    UNTIL           reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    TO              reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    DOWNTO          reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    ELSE            reduce using rule 81 (assignment_statement -> ID ASSIGN procedure_or_function_call .)
    TIMES           reduce using rule 112 (element -> procedure_or_function_call .)
    DIVIDE          reduce using rule 112 (element -> procedure_or_function_call .)
    PLUS            reduce using rule 112 (element -> procedure_or_function_call .)
    MINUS           reduce using rule 112 (element -> procedure_or_function_call .)
    DIV             reduce using rule 112 (element -> procedure_or_function_call .)
    MOD             reduce using rule 112 (element -> procedure_or_function_call .)
    EQUALS          reduce using rule 112 (element -> procedure_or_function_call .)
    DIFFERENT       reduce using rule 112 (element -> procedure_or_function_call .)
    LESSTHAN        reduce using rule 112 (element -> procedure_or_function_call .)
    LESSEQUAL       reduce using rule 112 (element -> procedure_or_function_call .)
    GREATERTHAN     reduce using rule 112 (element -> procedure_or_function_call .)
    GREATEREQUAL    reduce using rule 112 (element -> procedure_or_function_call .)
    AND             reduce using rule 112 (element -> procedure_or_function_call .)
    OR              reduce using rule 112 (element -> procedure_or_function_call .)

  ! SEMICOLON       [ reduce using rule 112 (element -> procedure_or_function_call .) ]
  ! END             [ reduce using rule 112 (element -> procedure_or_function_call .) ]
  ! UNTIL           [ reduce using rule 112 (element -> procedure_or_function_call .) ]
  ! TO              [ reduce using rule 112 (element -> procedure_or_function_call .) ]
  ! DOWNTO          [ reduce using rule 112 (element -> procedure_or_function_call .) ]
  ! ELSE            [ reduce using rule 112 (element -> procedure_or_function_call .) ]


state 139

    (82) assignment_statement -> ID LBRACKET expression . RBRACKET ASSIGN expression
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RBRACKET        shift and go to state 171
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 140

    (68) procedure_or_function_call -> ID LPAREN param_list . RPAREN
    (71) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 172
    COMMA           shift and go to state 173


state 141

    (69) procedure_or_function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    END             reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    MOD             reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    DIFFERENT       reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    LESSTHAN        reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    GREATERTHAN     reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    GREATEREQUAL    reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    THEN            reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    DO              reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    UNTIL           reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    OF              reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    RANGE           reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    TO              reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    DOWNTO          reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 69 (procedure_or_function_call -> ID LPAREN RPAREN .)


state 142

    (72) param_list -> param .

    RPAREN          reduce using rule 72 (param_list -> param .)
    COMMA           reduce using rule 72 (param_list -> param .)


state 143

    (73) param -> expression .
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RPAREN          reduce using rule 73 (param -> expression .)
    COMMA           reduce using rule 73 (param -> expression .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 144

    (74) if_statement -> IF expression THEN . statement ELSE statement
    (75) if_statement -> IF expression THEN . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    ELSE            reduce using rule 50 (statement -> .)
    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 174
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 145

    (76) while_statement -> WHILE expression DO . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    ELSE            reduce using rule 50 (statement -> .)
    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 175
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 146

    (77) repeat_statement -> REPEAT statement UNTIL . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 176
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 147

    (78) for_statement -> FOR assignment_statement TO . expression DO statement
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 177
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 148

    (79) for_statement -> FOR assignment_statement DOWNTO . expression DO statement
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 178
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 149

    (58) writeln_statement -> WRITELN LPAREN param_list . RPAREN
    (71) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 179
    COMMA           shift and go to state 173


state 150

    (59) writeln_statement -> WRITELN LPAREN RPAREN .

    SEMICOLON       reduce using rule 59 (writeln_statement -> WRITELN LPAREN RPAREN .)
    END             reduce using rule 59 (writeln_statement -> WRITELN LPAREN RPAREN .)
    UNTIL           reduce using rule 59 (writeln_statement -> WRITELN LPAREN RPAREN .)
    ELSE            reduce using rule 59 (writeln_statement -> WRITELN LPAREN RPAREN .)


state 151

    (60) writeln_statement -> WRITE LPAREN param_list . RPAREN
    (71) param_list -> param_list . COMMA param

    RPAREN          shift and go to state 180
    COMMA           shift and go to state 173


state 152

    (61) writeln_statement -> WRITE LPAREN RPAREN .

    SEMICOLON       reduce using rule 61 (writeln_statement -> WRITE LPAREN RPAREN .)
    END             reduce using rule 61 (writeln_statement -> WRITE LPAREN RPAREN .)
    UNTIL           reduce using rule 61 (writeln_statement -> WRITE LPAREN RPAREN .)
    ELSE            reduce using rule 61 (writeln_statement -> WRITE LPAREN RPAREN .)


state 153

    (62) readln_statement -> READLN LPAREN id_list . RPAREN

    RPAREN          shift and go to state 181


state 154

    (63) readln_statement -> READLN LPAREN RPAREN .

    SEMICOLON       reduce using rule 63 (readln_statement -> READLN LPAREN RPAREN .)
    END             reduce using rule 63 (readln_statement -> READLN LPAREN RPAREN .)
    UNTIL           reduce using rule 63 (readln_statement -> READLN LPAREN RPAREN .)
    ELSE            reduce using rule 63 (readln_statement -> READLN LPAREN RPAREN .)


state 155

    (64) readln_statement -> READ LPAREN id_list . RPAREN

    RPAREN          shift and go to state 182


state 156

    (65) readln_statement -> READ LPAREN RPAREN .

    SEMICOLON       reduce using rule 65 (readln_statement -> READ LPAREN RPAREN .)
    END             reduce using rule 65 (readln_statement -> READ LPAREN RPAREN .)
    UNTIL           reduce using rule 65 (readln_statement -> READ LPAREN RPAREN .)
    ELSE            reduce using rule 65 (readln_statement -> READ LPAREN RPAREN .)


state 157

    (51) case_statement -> CASE expression OF . case_list END
    (52) case_list -> . case_option SEMICOLON case_list
    (53) case_list -> . case_option SEMICOLON
    (54) case_option -> . NUMBER COLON statement
    (55) case_option -> . BOOL COLON statement
    (56) case_option -> . PHRASE COLON statement
    (57) case_option -> . ID COLON statement

    NUMBER          shift and go to state 185
    BOOL            shift and go to state 186
    PHRASE          shift and go to state 187
    ID              shift and go to state 188

    case_list                      shift and go to state 183
    case_option                    shift and go to state 184

state 158

    (27) parameter -> ID COLON . type
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 189
    array_type                     shift and go to state 35

state 159

    (20) procedure_heading -> PROCEDURE ID LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 20 (procedure_heading -> PROCEDURE ID LPAREN parameter_list RPAREN .)


state 160

    (25) parameter_list -> parameter COMMA . parameter_list
    (25) parameter_list -> . parameter COMMA parameter_list
    (26) parameter_list -> . parameter
    (27) parameter -> . ID COLON type

    ID              shift and go to state 105

    parameter                      shift and go to state 107
    parameter_list                 shift and go to state 190

state 161

    (24) function_heading -> FUNCTION ID LPAREN parameter_list RPAREN . COLON type

    COLON           shift and go to state 191


state 162

    (33) array_type -> ARRAY LBRACKET range RBRACKET . OF type

    OF              shift and go to state 192


state 163

    (34) range -> expression RANGE . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 193
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 164

    (111) element -> ID LBRACKET expression . RBRACKET
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RBRACKET        shift and go to state 194
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 165

    (13) id_list -> ID LBRACKET expression RBRACKET COMMA . id_list
    (10) id_list -> . ID
    (11) id_list -> . ID LBRACKET expression RBRACKET
    (12) id_list -> . ID COMMA id_list
    (13) id_list -> . ID LBRACKET expression RBRACKET COMMA id_list

    ID              shift and go to state 21

    id_list                        shift and go to state 195

state 166

    (83) expression -> expression and_or expression_m .
    (86) expression_m -> expression_m . sign expression_s
    (93) sign -> . PLUS
    (94) sign -> . MINUS
    (95) sign -> . DIV
    (96) sign -> . MOD
    (97) sign -> . EQUALS
    (98) sign -> . DIFFERENT
    (99) sign -> . LESSTHAN
    (100) sign -> . LESSEQUAL
    (101) sign -> . GREATERTHAN
    (102) sign -> . GREATEREQUAL

    RBRACKET        reduce using rule 83 (expression -> expression and_or expression_m .)
    AND             reduce using rule 83 (expression -> expression and_or expression_m .)
    OR              reduce using rule 83 (expression -> expression and_or expression_m .)
    THEN            reduce using rule 83 (expression -> expression and_or expression_m .)
    DO              reduce using rule 83 (expression -> expression and_or expression_m .)
    OF              reduce using rule 83 (expression -> expression and_or expression_m .)
    RANGE           reduce using rule 83 (expression -> expression and_or expression_m .)
    RPAREN          reduce using rule 83 (expression -> expression and_or expression_m .)
    SEMICOLON       reduce using rule 83 (expression -> expression and_or expression_m .)
    END             reduce using rule 83 (expression -> expression and_or expression_m .)
    UNTIL           reduce using rule 83 (expression -> expression and_or expression_m .)
    TO              reduce using rule 83 (expression -> expression and_or expression_m .)
    DOWNTO          reduce using rule 83 (expression -> expression and_or expression_m .)
    ELSE            reduce using rule 83 (expression -> expression and_or expression_m .)
    COMMA           reduce using rule 83 (expression -> expression and_or expression_m .)
    PLUS            shift and go to state 119
    MINUS           shift and go to state 120
    DIV             shift and go to state 121
    MOD             shift and go to state 122
    EQUALS          shift and go to state 123
    DIFFERENT       shift and go to state 124
    LESSTHAN        shift and go to state 125
    LESSEQUAL       shift and go to state 126
    GREATERTHAN     shift and go to state 127
    GREATEREQUAL    shift and go to state 128

    sign                           shift and go to state 118

state 167

    (86) expression_m -> expression_m sign expression_s .
    (88) expression_s -> expression_s . psign element
    (91) psign -> . TIMES
    (92) psign -> . DIVIDE

    PLUS            reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    MINUS           reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    DIV             reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    MOD             reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    EQUALS          reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    DIFFERENT       reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    LESSTHAN        reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    LESSEQUAL       reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    GREATERTHAN     reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    GREATEREQUAL    reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    RBRACKET        reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    AND             reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    OR              reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    THEN            reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    DO              reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    OF              reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    RANGE           reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    RPAREN          reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    SEMICOLON       reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    END             reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    UNTIL           reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    TO              reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    DOWNTO          reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    ELSE            reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    COMMA           reduce using rule 86 (expression_m -> expression_m sign expression_s .)
    TIMES           shift and go to state 130
    DIVIDE          shift and go to state 131

    psign                          shift and go to state 129

state 168

    (88) expression_s -> expression_s psign element .

    TIMES           reduce using rule 88 (expression_s -> expression_s psign element .)
    DIVIDE          reduce using rule 88 (expression_s -> expression_s psign element .)
    PLUS            reduce using rule 88 (expression_s -> expression_s psign element .)
    MINUS           reduce using rule 88 (expression_s -> expression_s psign element .)
    DIV             reduce using rule 88 (expression_s -> expression_s psign element .)
    MOD             reduce using rule 88 (expression_s -> expression_s psign element .)
    EQUALS          reduce using rule 88 (expression_s -> expression_s psign element .)
    DIFFERENT       reduce using rule 88 (expression_s -> expression_s psign element .)
    LESSTHAN        reduce using rule 88 (expression_s -> expression_s psign element .)
    LESSEQUAL       reduce using rule 88 (expression_s -> expression_s psign element .)
    GREATERTHAN     reduce using rule 88 (expression_s -> expression_s psign element .)
    GREATEREQUAL    reduce using rule 88 (expression_s -> expression_s psign element .)
    RBRACKET        reduce using rule 88 (expression_s -> expression_s psign element .)
    AND             reduce using rule 88 (expression_s -> expression_s psign element .)
    OR              reduce using rule 88 (expression_s -> expression_s psign element .)
    THEN            reduce using rule 88 (expression_s -> expression_s psign element .)
    DO              reduce using rule 88 (expression_s -> expression_s psign element .)
    OF              reduce using rule 88 (expression_s -> expression_s psign element .)
    RANGE           reduce using rule 88 (expression_s -> expression_s psign element .)
    RPAREN          reduce using rule 88 (expression_s -> expression_s psign element .)
    SEMICOLON       reduce using rule 88 (expression_s -> expression_s psign element .)
    END             reduce using rule 88 (expression_s -> expression_s psign element .)
    UNTIL           reduce using rule 88 (expression_s -> expression_s psign element .)
    TO              reduce using rule 88 (expression_s -> expression_s psign element .)
    DOWNTO          reduce using rule 88 (expression_s -> expression_s psign element .)
    ELSE            reduce using rule 88 (expression_s -> expression_s psign element .)
    COMMA           reduce using rule 88 (expression_s -> expression_s psign element .)


state 169

    (108) element -> LPAREN expression RPAREN .

    TIMES           reduce using rule 108 (element -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 108 (element -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 108 (element -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 108 (element -> LPAREN expression RPAREN .)
    DIV             reduce using rule 108 (element -> LPAREN expression RPAREN .)
    MOD             reduce using rule 108 (element -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 108 (element -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 108 (element -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 108 (element -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 108 (element -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 108 (element -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 108 (element -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 108 (element -> LPAREN expression RPAREN .)
    AND             reduce using rule 108 (element -> LPAREN expression RPAREN .)
    OR              reduce using rule 108 (element -> LPAREN expression RPAREN .)
    THEN            reduce using rule 108 (element -> LPAREN expression RPAREN .)
    DO              reduce using rule 108 (element -> LPAREN expression RPAREN .)
    OF              reduce using rule 108 (element -> LPAREN expression RPAREN .)
    RANGE           reduce using rule 108 (element -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 108 (element -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 108 (element -> LPAREN expression RPAREN .)
    END             reduce using rule 108 (element -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 108 (element -> LPAREN expression RPAREN .)
    TO              reduce using rule 108 (element -> LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 108 (element -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 108 (element -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 108 (element -> LPAREN expression RPAREN .)


state 170

    (103) length_function -> LENGTH LPAREN expression . RPAREN
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RPAREN          shift and go to state 196
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 171

    (82) assignment_statement -> ID LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 197


state 172

    (68) procedure_or_function_call -> ID LPAREN param_list RPAREN .

    SEMICOLON       reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    END             reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    TIMES           reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    DIVIDE          reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    PLUS            reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    MINUS           reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    DIV             reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    MOD             reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    EQUALS          reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    DIFFERENT       reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    LESSTHAN        reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    LESSEQUAL       reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    GREATERTHAN     reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    GREATEREQUAL    reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    RBRACKET        reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    AND             reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    OR              reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    THEN            reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    DO              reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    UNTIL           reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    OF              reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    RANGE           reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    RPAREN          reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    TO              reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    DOWNTO          reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    ELSE            reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)
    COMMA           reduce using rule 68 (procedure_or_function_call -> ID LPAREN param_list RPAREN .)


state 173

    (71) param_list -> param_list COMMA . param
    (73) param -> . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    param                          shift and go to state 198
    expression                     shift and go to state 143
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 174

    (74) if_statement -> IF expression THEN statement . ELSE statement
    (75) if_statement -> IF expression THEN statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 199
    SEMICOLON       reduce using rule 75 (if_statement -> IF expression THEN statement .)
    END             reduce using rule 75 (if_statement -> IF expression THEN statement .)
    UNTIL           reduce using rule 75 (if_statement -> IF expression THEN statement .)

  ! ELSE            [ reduce using rule 75 (if_statement -> IF expression THEN statement .) ]


state 175

    (76) while_statement -> WHILE expression DO statement .

    SEMICOLON       reduce using rule 76 (while_statement -> WHILE expression DO statement .)
    END             reduce using rule 76 (while_statement -> WHILE expression DO statement .)
    UNTIL           reduce using rule 76 (while_statement -> WHILE expression DO statement .)
    ELSE            reduce using rule 76 (while_statement -> WHILE expression DO statement .)


state 176

    (77) repeat_statement -> REPEAT statement UNTIL expression .
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    SEMICOLON       reduce using rule 77 (repeat_statement -> REPEAT statement UNTIL expression .)
    END             reduce using rule 77 (repeat_statement -> REPEAT statement UNTIL expression .)
    UNTIL           reduce using rule 77 (repeat_statement -> REPEAT statement UNTIL expression .)
    ELSE            reduce using rule 77 (repeat_statement -> REPEAT statement UNTIL expression .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 177

    (78) for_statement -> FOR assignment_statement TO expression . DO statement
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    DO              shift and go to state 200
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 178

    (79) for_statement -> FOR assignment_statement DOWNTO expression . DO statement
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    DO              shift and go to state 201
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 179

    (58) writeln_statement -> WRITELN LPAREN param_list RPAREN .

    SEMICOLON       reduce using rule 58 (writeln_statement -> WRITELN LPAREN param_list RPAREN .)
    END             reduce using rule 58 (writeln_statement -> WRITELN LPAREN param_list RPAREN .)
    UNTIL           reduce using rule 58 (writeln_statement -> WRITELN LPAREN param_list RPAREN .)
    ELSE            reduce using rule 58 (writeln_statement -> WRITELN LPAREN param_list RPAREN .)


state 180

    (60) writeln_statement -> WRITE LPAREN param_list RPAREN .

    SEMICOLON       reduce using rule 60 (writeln_statement -> WRITE LPAREN param_list RPAREN .)
    END             reduce using rule 60 (writeln_statement -> WRITE LPAREN param_list RPAREN .)
    UNTIL           reduce using rule 60 (writeln_statement -> WRITE LPAREN param_list RPAREN .)
    ELSE            reduce using rule 60 (writeln_statement -> WRITE LPAREN param_list RPAREN .)


state 181

    (62) readln_statement -> READLN LPAREN id_list RPAREN .

    SEMICOLON       reduce using rule 62 (readln_statement -> READLN LPAREN id_list RPAREN .)
    END             reduce using rule 62 (readln_statement -> READLN LPAREN id_list RPAREN .)
    UNTIL           reduce using rule 62 (readln_statement -> READLN LPAREN id_list RPAREN .)
    ELSE            reduce using rule 62 (readln_statement -> READLN LPAREN id_list RPAREN .)


state 182

    (64) readln_statement -> READ LPAREN id_list RPAREN .

    SEMICOLON       reduce using rule 64 (readln_statement -> READ LPAREN id_list RPAREN .)
    END             reduce using rule 64 (readln_statement -> READ LPAREN id_list RPAREN .)
    UNTIL           reduce using rule 64 (readln_statement -> READ LPAREN id_list RPAREN .)
    ELSE            reduce using rule 64 (readln_statement -> READ LPAREN id_list RPAREN .)


state 183

    (51) case_statement -> CASE expression OF case_list . END

    END             shift and go to state 202


state 184

    (52) case_list -> case_option . SEMICOLON case_list
    (53) case_list -> case_option . SEMICOLON

    SEMICOLON       shift and go to state 203


state 185

    (54) case_option -> NUMBER . COLON statement

    COLON           shift and go to state 204


state 186

    (55) case_option -> BOOL . COLON statement

    COLON           shift and go to state 205


state 187

    (56) case_option -> PHRASE . COLON statement

    COLON           shift and go to state 206


state 188

    (57) case_option -> ID . COLON statement

    COLON           shift and go to state 207


state 189

    (27) parameter -> ID COLON type .

    COMMA           reduce using rule 27 (parameter -> ID COLON type .)
    RPAREN          reduce using rule 27 (parameter -> ID COLON type .)


state 190

    (25) parameter_list -> parameter COMMA parameter_list .

    RPAREN          reduce using rule 25 (parameter_list -> parameter COMMA parameter_list .)


state 191

    (24) function_heading -> FUNCTION ID LPAREN parameter_list RPAREN COLON . type
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 208
    array_type                     shift and go to state 35

state 192

    (33) array_type -> ARRAY LBRACKET range RBRACKET OF . type
    (28) type -> . REAL
    (29) type -> . INTEGER
    (30) type -> . BOOLEAN
    (31) type -> . STRING
    (32) type -> . array_type
    (33) array_type -> . ARRAY LBRACKET range RBRACKET OF type

    REAL            shift and go to state 31
    INTEGER         shift and go to state 32
    BOOLEAN         shift and go to state 33
    STRING          shift and go to state 34
    ARRAY           shift and go to state 36

    type                           shift and go to state 209
    array_type                     shift and go to state 35

state 193

    (34) range -> expression RANGE expression .
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    RBRACKET        reduce using rule 34 (range -> expression RANGE expression .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 194

    (111) element -> ID LBRACKET expression RBRACKET .

    TIMES           reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    DIV             reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    DIFFERENT       reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    LESSTHAN        reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    GREATERTHAN     reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    THEN            reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    DO              reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    OF              reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    RANGE           reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    END             reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    UNTIL           reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    DOWNTO          reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 111 (element -> ID LBRACKET expression RBRACKET .)


state 195

    (13) id_list -> ID LBRACKET expression RBRACKET COMMA id_list .

    COLON           reduce using rule 13 (id_list -> ID LBRACKET expression RBRACKET COMMA id_list .)
    RPAREN          reduce using rule 13 (id_list -> ID LBRACKET expression RBRACKET COMMA id_list .)


state 196

    (103) length_function -> LENGTH LPAREN expression RPAREN .

    TIMES           reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    PLUS            reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    MINUS           reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    DIV             reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    MOD             reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    EQUALS          reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    AND             reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    OR              reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    THEN            reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    DO              reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    OF              reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    RANGE           reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    RPAREN          reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    END             reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    UNTIL           reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    TO              reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    ELSE            reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)
    COMMA           reduce using rule 103 (length_function -> LENGTH LPAREN expression RPAREN .)


state 197

    (82) assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN . expression
    (83) expression -> . expression and_or expression_m
    (84) expression -> . expression_m
    (85) expression_m -> . expression_s
    (86) expression_m -> . expression_m sign expression_s
    (87) expression_s -> . element
    (88) expression_s -> . expression_s psign element
    (104) element -> . ID
    (105) element -> . NUMBER
    (106) element -> . BOOL
    (107) element -> . PHRASE
    (108) element -> . LPAREN expression RPAREN
    (109) element -> . NOT element
    (110) element -> . length_function
    (111) element -> . ID LBRACKET expression RBRACKET
    (112) element -> . procedure_or_function_call
    (103) length_function -> . LENGTH LPAREN expression RPAREN
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID

    ID              shift and go to state 76
    NUMBER          shift and go to state 81
    BOOL            shift and go to state 82
    PHRASE          shift and go to state 83
    LPAREN          shift and go to state 84
    NOT             shift and go to state 85
    LENGTH          shift and go to state 88

    expression                     shift and go to state 210
    expression_m                   shift and go to state 78
    expression_s                   shift and go to state 79
    element                        shift and go to state 80
    length_function                shift and go to state 86
    procedure_or_function_call     shift and go to state 87

state 198

    (71) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 71 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 71 (param_list -> param_list COMMA param .)


state 199

    (74) if_statement -> IF expression THEN statement ELSE . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    ELSE            reduce using rule 50 (statement -> .)
    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 211
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 200

    (78) for_statement -> FOR assignment_statement TO expression DO . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    ELSE            reduce using rule 50 (statement -> .)
    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    assignment_statement           shift and go to state 44
    statement                      shift and go to state 212
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 201

    (79) for_statement -> FOR assignment_statement DOWNTO expression DO . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    ELSE            reduce using rule 50 (statement -> .)
    SEMICOLON       reduce using rule 50 (statement -> .)
    END             reduce using rule 50 (statement -> .)
    UNTIL           reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    assignment_statement           shift and go to state 44
    statement                      shift and go to state 213
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 202

    (51) case_statement -> CASE expression OF case_list END .

    SEMICOLON       reduce using rule 51 (case_statement -> CASE expression OF case_list END .)
    END             reduce using rule 51 (case_statement -> CASE expression OF case_list END .)
    UNTIL           reduce using rule 51 (case_statement -> CASE expression OF case_list END .)
    ELSE            reduce using rule 51 (case_statement -> CASE expression OF case_list END .)


state 203

    (52) case_list -> case_option SEMICOLON . case_list
    (53) case_list -> case_option SEMICOLON .
    (52) case_list -> . case_option SEMICOLON case_list
    (53) case_list -> . case_option SEMICOLON
    (54) case_option -> . NUMBER COLON statement
    (55) case_option -> . BOOL COLON statement
    (56) case_option -> . PHRASE COLON statement
    (57) case_option -> . ID COLON statement

    END             reduce using rule 53 (case_list -> case_option SEMICOLON .)
    NUMBER          shift and go to state 185
    BOOL            shift and go to state 186
    PHRASE          shift and go to state 187
    ID              shift and go to state 188

    case_option                    shift and go to state 184
    case_list                      shift and go to state 214

state 204

    (54) case_option -> NUMBER COLON . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 215
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 205

    (55) case_option -> BOOL COLON . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 216
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 206

    (56) case_option -> PHRASE COLON . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 217
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 207

    (57) case_option -> ID COLON . statement
    (38) statement -> . assignment_statement
    (39) statement -> . statement_part
    (40) statement -> . if_statement
    (41) statement -> . while_statement
    (42) statement -> . repeat_statement
    (43) statement -> . for_statement
    (44) statement -> . procedure_or_function_call
    (45) statement -> . writeln_statement
    (46) statement -> . readln_statement
    (47) statement -> . break_statement
    (48) statement -> . continue_statement
    (49) statement -> . case_statement
    (50) statement -> .
    (80) assignment_statement -> . ID ASSIGN expression
    (81) assignment_statement -> . ID ASSIGN procedure_or_function_call
    (82) assignment_statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (35) statement_part -> . BEGIN statement_sequence END
    (74) if_statement -> . IF expression THEN statement ELSE statement
    (75) if_statement -> . IF expression THEN statement
    (76) while_statement -> . WHILE expression DO statement
    (77) repeat_statement -> . REPEAT statement UNTIL expression
    (78) for_statement -> . FOR assignment_statement TO expression DO statement
    (79) for_statement -> . FOR assignment_statement DOWNTO expression DO statement
    (68) procedure_or_function_call -> . ID LPAREN param_list RPAREN
    (69) procedure_or_function_call -> . ID LPAREN RPAREN
    (70) procedure_or_function_call -> . ID
    (58) writeln_statement -> . WRITELN LPAREN param_list RPAREN
    (59) writeln_statement -> . WRITELN LPAREN RPAREN
    (60) writeln_statement -> . WRITE LPAREN param_list RPAREN
    (61) writeln_statement -> . WRITE LPAREN RPAREN
    (62) readln_statement -> . READLN LPAREN id_list RPAREN
    (63) readln_statement -> . READLN LPAREN RPAREN
    (64) readln_statement -> . READ LPAREN id_list RPAREN
    (65) readln_statement -> . READ LPAREN RPAREN
    (66) break_statement -> . BREAK
    (67) continue_statement -> . CONTINUE
    (51) case_statement -> . CASE expression OF case_list END

    SEMICOLON       reduce using rule 50 (statement -> .)
    ID              shift and go to state 56
    BEGIN           shift and go to state 24
    IF              shift and go to state 57
    WHILE           shift and go to state 58
    REPEAT          shift and go to state 59
    FOR             shift and go to state 60
    WRITELN         shift and go to state 61
    WRITE           shift and go to state 62
    READLN          shift and go to state 63
    READ            shift and go to state 64
    BREAK           shift and go to state 65
    CONTINUE        shift and go to state 66
    CASE            shift and go to state 67

    statement                      shift and go to state 218
    assignment_statement           shift and go to state 44
    statement_part                 shift and go to state 45
    if_statement                   shift and go to state 46
    while_statement                shift and go to state 47
    repeat_statement               shift and go to state 48
    for_statement                  shift and go to state 49
    procedure_or_function_call     shift and go to state 50
    writeln_statement              shift and go to state 51
    readln_statement               shift and go to state 52
    break_statement                shift and go to state 53
    continue_statement             shift and go to state 54
    case_statement                 shift and go to state 55

state 208

    (24) function_heading -> FUNCTION ID LPAREN parameter_list RPAREN COLON type .

    SEMICOLON       reduce using rule 24 (function_heading -> FUNCTION ID LPAREN parameter_list RPAREN COLON type .)


state 209

    (33) array_type -> ARRAY LBRACKET range RBRACKET OF type .

    SEMICOLON       reduce using rule 33 (array_type -> ARRAY LBRACKET range RBRACKET OF type .)
    COMMA           reduce using rule 33 (array_type -> ARRAY LBRACKET range RBRACKET OF type .)
    RPAREN          reduce using rule 33 (array_type -> ARRAY LBRACKET range RBRACKET OF type .)


state 210

    (82) assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .
    (83) expression -> expression . and_or expression_m
    (89) and_or -> . AND
    (90) and_or -> . OR

    SEMICOLON       reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    END             reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    UNTIL           reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    TO              reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    DOWNTO          reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    ELSE            reduce using rule 82 (assignment_statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    and_or                         shift and go to state 115

state 211

    (74) if_statement -> IF expression THEN statement ELSE statement .

    SEMICOLON       reduce using rule 74 (if_statement -> IF expression THEN statement ELSE statement .)
    END             reduce using rule 74 (if_statement -> IF expression THEN statement ELSE statement .)
    UNTIL           reduce using rule 74 (if_statement -> IF expression THEN statement ELSE statement .)
    ELSE            reduce using rule 74 (if_statement -> IF expression THEN statement ELSE statement .)


state 212

    (78) for_statement -> FOR assignment_statement TO expression DO statement .

    SEMICOLON       reduce using rule 78 (for_statement -> FOR assignment_statement TO expression DO statement .)
    END             reduce using rule 78 (for_statement -> FOR assignment_statement TO expression DO statement .)
    UNTIL           reduce using rule 78 (for_statement -> FOR assignment_statement TO expression DO statement .)
    ELSE            reduce using rule 78 (for_statement -> FOR assignment_statement TO expression DO statement .)


state 213

    (79) for_statement -> FOR assignment_statement DOWNTO expression DO statement .

    SEMICOLON       reduce using rule 79 (for_statement -> FOR assignment_statement DOWNTO expression DO statement .)
    END             reduce using rule 79 (for_statement -> FOR assignment_statement DOWNTO expression DO statement .)
    UNTIL           reduce using rule 79 (for_statement -> FOR assignment_statement DOWNTO expression DO statement .)
    ELSE            reduce using rule 79 (for_statement -> FOR assignment_statement DOWNTO expression DO statement .)


state 214

    (52) case_list -> case_option SEMICOLON case_list .

    END             reduce using rule 52 (case_list -> case_option SEMICOLON case_list .)


state 215

    (54) case_option -> NUMBER COLON statement .

    SEMICOLON       reduce using rule 54 (case_option -> NUMBER COLON statement .)


state 216

    (55) case_option -> BOOL COLON statement .

    SEMICOLON       reduce using rule 55 (case_option -> BOOL COLON statement .)


state 217

    (56) case_option -> PHRASE COLON statement .

    SEMICOLON       reduce using rule 56 (case_option -> PHRASE COLON statement .)


state 218

    (57) case_option -> ID COLON statement .

    SEMICOLON       reduce using rule 57 (case_option -> ID COLON statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 4 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 26 resolved as shift
WARNING: shift/reduce conflict for VAR in state 27 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 76 resolved using rule (procedure_or_function_call -> ID)
WARNING: rejected rule (element -> ID) in state 76
WARNING: reduce/reduce conflict in state 136 resolved using rule (procedure_or_function_call -> ID)
WARNING: rejected rule (element -> ID) in state 136
WARNING: reduce/reduce conflict in state 138 resolved using rule (assignment_statement -> ID ASSIGN procedure_or_function_call)
WARNING: rejected rule (element -> procedure_or_function_call) in state 138
WARNING: Rule (element -> ID) is never reduced
